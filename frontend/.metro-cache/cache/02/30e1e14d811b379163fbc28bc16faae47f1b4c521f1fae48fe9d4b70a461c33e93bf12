{"dependencies":[{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":17,"index":300},"end":{"line":8,"column":52,"index":335}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":353},"end":{"line":9,"column":32,"index":369}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"./NativeTabsTriggerTabBar","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":34,"index":405},"end":{"line":10,"column":70,"index":441}}],"key":"WVwnFVa4tbZlC8q45AzhMA62QpY=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":16,"index":459},"end":{"line":11,"column":34,"index":477}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8=","exportNames":["*"],"imports":1}},{"name":"../../link/preview/PreviewRouteContext","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":30,"index":509},"end":{"line":12,"column":79,"index":558}}],"key":"RjOiGG3bmFq3DQhcV/pBDiHQb00=","exportNames":["*"],"imports":1}},{"name":"../../views/useSafeLayoutEffect","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":30,"index":590},"end":{"line":13,"column":72,"index":632}}],"key":"+Bqbcz5xwcnBwCK/TVf05V4tLZ8=","exportNames":["*"],"imports":1}},{"name":"../common/elements","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":19,"index":653},"end":{"line":14,"column":48,"index":682}}],"key":"1RFkZDeCNqyJBPS3jQJ086fMimI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n  'use client';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.NativeTabTrigger = void 0;\n  exports.convertTabPropsToOptions = convertTabPropsToOptions;\n  exports.appendIconOptions = appendIconOptions;\n  exports.isNativeTabTrigger = isNativeTabTrigger;\n  const native_1 = require(_dependencyMap[0], \"@react-navigation/native\");\n  const react_1 = require(_dependencyMap[1], \"react\");\n  const NativeTabsTriggerTabBar_1 = require(_dependencyMap[2], \"./NativeTabsTriggerTabBar\");\n  const utils_1 = require(_dependencyMap[3], \"./utils\");\n  const PreviewRouteContext_1 = require(_dependencyMap[4], \"../../link/preview/PreviewRouteContext\");\n  const useSafeLayoutEffect_1 = require(_dependencyMap[5], \"../../views/useSafeLayoutEffect\");\n  const elements_1 = require(_dependencyMap[6], \"../common/elements\");\n  /**\n   * The component used to customize the native tab options both in the _layout file and from the tab screen.\n   *\n   * When used in the _layout file, you need to provide a `name` prop.\n   * When used in the tab screen, the `name` prop takes no effect.\n   *\n   * @example\n   * ```tsx\n   * // In _layout file\n   * import { NativeTabs } from 'expo-router/unstable-native-tabs';\n   *\n   * export default function Layout() {\n   *   return (\n   *     <NativeTabs>\n   *       <NativeTabs.Trigger name=\"home\" />\n   *       <NativeTabs.Trigger name=\"settings\" />\n   *     </NativeTabs>\n   *   );\n   * }\n   * ```\n   *\n   * @example\n   * ```tsx\n   * // In a tab screen\n   * import { NativeTabs } from 'expo-router/unstable-native-tabs';\n   *\n   * export default function HomeScreen() {\n   *   return (\n   *     <View>\n   *       <NativeTabs.Trigger>\n   *         <Label>Home</Label>\n   *       </NativeTabs.Trigger>\n   *       <Text>This is home screen!</Text>\n   *     </View>\n   *   );\n   * }\n   * ```\n   *\n   * > **Note:** You can use the alias `NativeTabs.Trigger` for this component.\n   */\n  function NativeTabTriggerImpl(props) {\n    const route = (0, native_1.useRoute)();\n    const navigation = (0, native_1.useNavigation)();\n    const isFocused = navigation.isFocused();\n    const isInPreview = (0, PreviewRouteContext_1.useIsPreview)();\n    (0, useSafeLayoutEffect_1.useSafeLayoutEffect)(() => {\n      // This will cause the tab to update only when it is focused.\n      // As long as all tabs are loaded at the start, we don't need this check.\n      // It is here to ensure similar behavior to stack\n      if (isFocused && !isInPreview) {\n        if (navigation.getState()?.type !== 'tab') {\n          throw new Error(`Trigger component can only be used in the tab screen. Current route: ${route.name}`);\n        }\n        const options = convertTabPropsToOptions(props, true);\n        navigation.setOptions(options);\n      }\n    }, [isFocused, props, isInPreview]);\n    return null;\n  }\n  exports.NativeTabTrigger = Object.assign(NativeTabTriggerImpl, {\n    TabBar: NativeTabsTriggerTabBar_1.NativeTabsTriggerTabBar\n  });\n  function convertTabPropsToOptions({\n    options,\n    hidden,\n    children,\n    role,\n    disablePopToTop,\n    disableScrollToTop\n  }, isDynamic = false) {\n    const initialOptions = isDynamic ? {\n      ...options\n    } : {\n      ...options,\n      hidden: !!hidden,\n      specialEffects: {\n        repeatedTabSelection: {\n          popToRoot: !disablePopToTop,\n          scrollToTop: !disableScrollToTop\n        }\n      },\n      role: role ?? options?.role\n    };\n    const allowedChildren = (0, utils_1.filterAllowedChildrenElements)(children, [elements_1.Badge, elements_1.Label, elements_1.Icon, NativeTabsTriggerTabBar_1.NativeTabsTriggerTabBar]);\n    return allowedChildren.reduce((acc, child) => {\n      if ((0, utils_1.isChildOfType)(child, elements_1.Badge)) {\n        appendBadgeOptions(acc, child.props);\n      } else if ((0, utils_1.isChildOfType)(child, elements_1.Label)) {\n        appendLabelOptions(acc, child.props);\n      } else if ((0, utils_1.isChildOfType)(child, elements_1.Icon)) {\n        appendIconOptions(acc, child.props);\n      } else if ((0, utils_1.isChildOfType)(child, NativeTabsTriggerTabBar_1.NativeTabsTriggerTabBar)) {\n        appendTabBarOptions(acc, child.props);\n      }\n      return acc;\n    }, {\n      ...initialOptions\n    });\n  }\n  function appendBadgeOptions(options, props) {\n    if (props.children) {\n      options.badgeValue = String(props.children);\n      options.selectedBadgeBackgroundColor = props.selectedBackgroundColor;\n    } else if (!props.hidden) {\n      // If no value is provided, we set it to a space to show the badge\n      // Otherwise, the `react-native-screens` will interpret it as a hidden badge\n      // https://github.com/software-mansion/react-native-screens/blob/b4358fd95dd0736fc54df6bb97f210dc89edf24c/ios/bottom-tabs/RNSBottomTabsScreenComponentView.mm#L172\n      options.badgeValue = ' ';\n    }\n  }\n  function appendLabelOptions(options, props) {\n    if (props.hidden) {\n      options.title = '';\n    } else {\n      options.title = props.children;\n      if (props.selectedStyle) {\n        options.selectedLabelStyle = props.selectedStyle;\n      }\n    }\n  }\n  function appendIconOptions(options, props) {\n    if ('src' in props && props.src) {\n      const icon = convertIconSrcToIconOption(props);\n      options.icon = icon?.icon;\n      options.selectedIcon = icon?.selectedIcon;\n    } else if ('sf' in props && false) {\n      if (typeof props.sf === 'string') {\n        options.icon = props.sf ? {\n          sf: props.sf\n        } : undefined;\n        options.selectedIcon = undefined;\n      } else if (props.sf) {\n        options.icon = props.sf.default ? {\n          sf: props.sf.default\n        } : undefined;\n        options.selectedIcon = props.sf.selected ? {\n          sf: props.sf.selected\n        } : undefined;\n      }\n    } else if ('androidSrc' in props && false) {\n      const icon = convertIconSrcToIconOption({\n        src: props.androidSrc\n      });\n      options.icon = icon?.icon;\n      options.selectedIcon = icon?.selectedIcon;\n    } else if ('drawable' in props && false) {\n      options.icon = {\n        drawable: props.drawable\n      };\n      options.selectedIcon = undefined;\n    }\n    if (props.selectedColor) {\n      options.selectedIconColor = props.selectedColor;\n    }\n  }\n  function convertIconSrcToIconOption(icon) {\n    if (icon && icon.src) {\n      const {\n        defaultIcon,\n        selected\n      } = typeof icon.src === 'object' && 'selected' in icon.src ? {\n        defaultIcon: icon.src.default,\n        selected: icon.src.selected\n      } : {\n        defaultIcon: icon.src\n      };\n      const options = {};\n      options.icon = convertSrcOrComponentToSrc(defaultIcon);\n      options.selectedIcon = convertSrcOrComponentToSrc(selected);\n      return options;\n    }\n    return undefined;\n  }\n  function convertSrcOrComponentToSrc(src) {\n    if (src) {\n      if ((0, react_1.isValidElement)(src)) {\n        if (src.type === elements_1.VectorIcon) {\n          const props = src.props;\n          return {\n            src: props.family.getImageSource(props.name, 24, 'white')\n          };\n        } else {\n          console.warn('Only VectorIcon is supported as a React element in Icon.src');\n        }\n      } else {\n        return {\n          src\n        };\n      }\n    }\n    return undefined;\n  }\n  function appendTabBarOptions(options, props) {\n    const {\n      backgroundColor,\n      blurEffect,\n      iconColor,\n      disableTransparentOnScrollEdge,\n      badgeBackgroundColor,\n      badgeTextColor,\n      indicatorColor,\n      labelStyle,\n      shadowColor\n    } = props;\n    if (backgroundColor) {\n      options.backgroundColor = backgroundColor;\n    }\n    // We need better native integration of this on Android\n    // Simulating from JS side creates ugly transitions\n    if (true) {\n      if (blurEffect) {\n        options.blurEffect = blurEffect;\n      }\n      if (shadowColor) {\n        options.shadowColor = shadowColor;\n      }\n      if (iconColor) {\n        options.iconColor = iconColor;\n      }\n      if (disableTransparentOnScrollEdge !== undefined) {\n        options.disableTransparentOnScrollEdge = disableTransparentOnScrollEdge;\n      }\n      if (badgeBackgroundColor) {\n        options.badgeBackgroundColor = badgeBackgroundColor;\n      }\n      if (badgeTextColor) {\n        options.badgeTextColor = badgeTextColor;\n      }\n      if (indicatorColor) {\n        options.indicatorColor = indicatorColor;\n      }\n      if (labelStyle) {\n        options.labelStyle = labelStyle;\n      }\n    }\n  }\n  function isNativeTabTrigger(child, contextKey) {\n    if ((0, react_1.isValidElement)(child) && child && child.type === exports.NativeTabTrigger) {\n      if (typeof child.props === 'object' && child.props && 'name' in child.props && !child.props.name) {\n        throw new Error(`<Trigger /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`);\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (['component', 'getComponent'].some(key => child.props && typeof child.props === 'object' && key in child.props)) {\n          throw new Error(`<Trigger /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`component\\` or \\`getComponent\\` prop when used as a child of a Layout Route`);\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n});","lineCount":269,"map":[[2,2,1,0],[2,14,1,12],[3,2,2,0],[3,14,2,12],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,3,47,"value"],[6,9,3,52],[6,11,3,54],[7,2,3,59],[7,3,3,60],[7,4,3,61],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"NativeTabTrigger"],[8,26,4,24],[8,29,4,27],[8,34,4,32],[8,35,4,33],[9,2,5,0,"exports"],[9,9,5,7],[9,10,5,8,"convertTabPropsToOptions"],[9,34,5,32],[9,37,5,35,"convertTabPropsToOptions"],[9,61,5,59],[10,2,6,0,"exports"],[10,9,6,7],[10,10,6,8,"appendIconOptions"],[10,27,6,25],[10,30,6,28,"appendIconOptions"],[10,47,6,45],[11,2,7,0,"exports"],[11,9,7,7],[11,10,7,8,"isNativeTabTrigger"],[11,28,7,26],[11,31,7,29,"isNativeTabTrigger"],[11,49,7,47],[12,2,8,0],[12,8,8,6,"native_1"],[12,16,8,14],[12,19,8,17,"require"],[12,26,8,24],[12,27,8,24,"_dependencyMap"],[12,41,8,24],[12,72,8,51],[12,73,8,52],[13,2,9,0],[13,8,9,6,"react_1"],[13,15,9,13],[13,18,9,16,"require"],[13,25,9,23],[13,26,9,23,"_dependencyMap"],[13,40,9,23],[13,52,9,31],[13,53,9,32],[14,2,10,0],[14,8,10,6,"NativeTabsTriggerTabBar_1"],[14,33,10,31],[14,36,10,34,"require"],[14,43,10,41],[14,44,10,41,"_dependencyMap"],[14,58,10,41],[14,90,10,69],[14,91,10,70],[15,2,11,0],[15,8,11,6,"utils_1"],[15,15,11,13],[15,18,11,16,"require"],[15,25,11,23],[15,26,11,23,"_dependencyMap"],[15,40,11,23],[15,54,11,33],[15,55,11,34],[16,2,12,0],[16,8,12,6,"PreviewRouteContext_1"],[16,29,12,27],[16,32,12,30,"require"],[16,39,12,37],[16,40,12,37,"_dependencyMap"],[16,54,12,37],[16,99,12,78],[16,100,12,79],[17,2,13,0],[17,8,13,6,"useSafeLayoutEffect_1"],[17,29,13,27],[17,32,13,30,"require"],[17,39,13,37],[17,40,13,37,"_dependencyMap"],[17,54,13,37],[17,92,13,71],[17,93,13,72],[18,2,14,0],[18,8,14,6,"elements_1"],[18,18,14,16],[18,21,14,19,"require"],[18,28,14,26],[18,29,14,26,"_dependencyMap"],[18,43,14,26],[18,68,14,47],[18,69,14,48],[19,2,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,0,33,0],[38,0,34,0],[39,0,35,0],[40,0,36,0],[41,0,37,0],[42,0,38,0],[43,0,39,0],[44,0,40,0],[45,0,41,0],[46,0,42,0],[47,0,43,0],[48,0,44,0],[49,0,45,0],[50,0,46,0],[51,0,47,0],[52,0,48,0],[53,0,49,0],[54,0,50,0],[55,0,51,0],[56,0,52,0],[57,0,53,0],[58,0,54,0],[59,2,55,0],[59,11,55,9,"NativeTabTriggerImpl"],[59,31,55,29,"NativeTabTriggerImpl"],[59,32,55,30,"props"],[59,37,55,35],[59,39,55,37],[60,4,56,4],[60,10,56,10,"route"],[60,15,56,15],[60,18,56,18],[60,19,56,19],[60,20,56,20],[60,22,56,22,"native_1"],[60,30,56,30],[60,31,56,31,"useRoute"],[60,39,56,39],[60,41,56,41],[60,42,56,42],[61,4,57,4],[61,10,57,10,"navigation"],[61,20,57,20],[61,23,57,23],[61,24,57,24],[61,25,57,25],[61,27,57,27,"native_1"],[61,35,57,35],[61,36,57,36,"useNavigation"],[61,49,57,49],[61,51,57,51],[61,52,57,52],[62,4,58,4],[62,10,58,10,"isFocused"],[62,19,58,19],[62,22,58,22,"navigation"],[62,32,58,32],[62,33,58,33,"isFocused"],[62,42,58,42],[62,43,58,43],[62,44,58,44],[63,4,59,4],[63,10,59,10,"isInPreview"],[63,21,59,21],[63,24,59,24],[63,25,59,25],[63,26,59,26],[63,28,59,28,"PreviewRouteContext_1"],[63,49,59,49],[63,50,59,50,"useIsPreview"],[63,62,59,62],[63,64,59,64],[63,65,59,65],[64,4,60,4],[64,5,60,5],[64,6,60,6],[64,8,60,8,"useSafeLayoutEffect_1"],[64,29,60,29],[64,30,60,30,"useSafeLayoutEffect"],[64,49,60,49],[64,51,60,51],[64,57,60,57],[65,6,61,8],[66,6,62,8],[67,6,63,8],[68,6,64,8],[68,10,64,12,"isFocused"],[68,19,64,21],[68,23,64,25],[68,24,64,26,"isInPreview"],[68,35,64,37],[68,37,64,39],[69,8,65,12],[69,12,65,16,"navigation"],[69,22,65,26],[69,23,65,27,"getState"],[69,31,65,35],[69,32,65,36],[69,33,65,37],[69,35,65,39,"type"],[69,39,65,43],[69,44,65,48],[69,49,65,53],[69,51,65,55],[70,10,66,16],[70,16,66,22],[70,20,66,26,"Error"],[70,25,66,31],[70,26,66,32],[70,98,66,104,"route"],[70,103,66,109],[70,104,66,110,"name"],[70,108,66,114],[70,110,66,116],[70,111,66,117],[71,8,67,12],[72,8,68,12],[72,14,68,18,"options"],[72,21,68,25],[72,24,68,28,"convertTabPropsToOptions"],[72,48,68,52],[72,49,68,53,"props"],[72,54,68,58],[72,56,68,60],[72,60,68,64],[72,61,68,65],[73,8,69,12,"navigation"],[73,18,69,22],[73,19,69,23,"setOptions"],[73,29,69,33],[73,30,69,34,"options"],[73,37,69,41],[73,38,69,42],[74,6,70,8],[75,4,71,4],[75,5,71,5],[75,7,71,7],[75,8,71,8,"isFocused"],[75,17,71,17],[75,19,71,19,"props"],[75,24,71,24],[75,26,71,26,"isInPreview"],[75,37,71,37],[75,38,71,38],[75,39,71,39],[76,4,72,4],[76,11,72,11],[76,15,72,15],[77,2,73,0],[78,2,74,0,"exports"],[78,9,74,7],[78,10,74,8,"NativeTabTrigger"],[78,26,74,24],[78,29,74,27,"Object"],[78,35,74,33],[78,36,74,34,"assign"],[78,42,74,40],[78,43,74,41,"NativeTabTriggerImpl"],[78,63,74,61],[78,65,74,63],[79,4,75,4,"TabBar"],[79,10,75,10],[79,12,75,12,"NativeTabsTriggerTabBar_1"],[79,37,75,37],[79,38,75,38,"NativeTabsTriggerTabBar"],[80,2,76,0],[80,3,76,1],[80,4,76,2],[81,2,77,0],[81,11,77,9,"convertTabPropsToOptions"],[81,35,77,33,"convertTabPropsToOptions"],[81,36,77,34],[82,4,77,36,"options"],[82,11,77,43],[83,4,77,45,"hidden"],[83,10,77,51],[84,4,77,53,"children"],[84,12,77,61],[85,4,77,63,"role"],[85,8,77,67],[86,4,77,69,"disablePopToTop"],[86,19,77,84],[87,4,77,86,"disableScrollToTop"],[88,2,77,105],[88,3,77,106],[88,5,77,108,"isDynamic"],[88,14,77,117],[88,17,77,120],[88,22,77,125],[88,24,77,127],[89,4,78,4],[89,10,78,10,"initialOptions"],[89,24,78,24],[89,27,78,27,"isDynamic"],[89,36,78,36],[89,39,79,10],[90,6,79,12],[90,9,79,15,"options"],[91,4,79,23],[91,5,79,24],[91,8,80,10],[92,6,81,12],[92,9,81,15,"options"],[92,16,81,22],[93,6,82,12,"hidden"],[93,12,82,18],[93,14,82,20],[93,15,82,21],[93,16,82,22,"hidden"],[93,22,82,28],[94,6,83,12,"specialEffects"],[94,20,83,26],[94,22,83,28],[95,8,84,16,"repeatedTabSelection"],[95,28,84,36],[95,30,84,38],[96,10,85,20,"popToRoot"],[96,19,85,29],[96,21,85,31],[96,22,85,32,"disablePopToTop"],[96,37,85,47],[97,10,86,20,"scrollToTop"],[97,21,86,31],[97,23,86,33],[97,24,86,34,"disableScrollToTop"],[98,8,87,16],[99,6,88,12],[99,7,88,13],[100,6,89,12,"role"],[100,10,89,16],[100,12,89,18,"role"],[100,16,89,22],[100,20,89,26,"options"],[100,27,89,33],[100,29,89,35,"role"],[101,4,90,8],[101,5,90,9],[102,4,91,4],[102,10,91,10,"allowedChildren"],[102,25,91,25],[102,28,91,28],[102,29,91,29],[102,30,91,30],[102,32,91,32,"utils_1"],[102,39,91,39],[102,40,91,40,"filterAllowedChildrenElements"],[102,69,91,69],[102,71,91,71,"children"],[102,79,91,79],[102,81,91,81],[102,82,92,8,"elements_1"],[102,92,92,18],[102,93,92,19,"Badge"],[102,98,92,24],[102,100,93,8,"elements_1"],[102,110,93,18],[102,111,93,19,"Label"],[102,116,93,24],[102,118,94,8,"elements_1"],[102,128,94,18],[102,129,94,19,"Icon"],[102,133,94,23],[102,135,95,8,"NativeTabsTriggerTabBar_1"],[102,160,95,33],[102,161,95,34,"NativeTabsTriggerTabBar"],[102,184,95,57],[102,185,96,5],[102,186,96,6],[103,4,97,4],[103,11,97,11,"allowedChildren"],[103,26,97,26],[103,27,97,27,"reduce"],[103,33,97,33],[103,34,97,34],[103,35,97,35,"acc"],[103,38,97,38],[103,40,97,40,"child"],[103,45,97,45],[103,50,97,50],[104,6,98,8],[104,10,98,12],[104,11,98,13],[104,12,98,14],[104,14,98,16,"utils_1"],[104,21,98,23],[104,22,98,24,"isChildOfType"],[104,35,98,37],[104,37,98,39,"child"],[104,42,98,44],[104,44,98,46,"elements_1"],[104,54,98,56],[104,55,98,57,"Badge"],[104,60,98,62],[104,61,98,63],[104,63,98,65],[105,8,99,12,"appendBadgeOptions"],[105,26,99,30],[105,27,99,31,"acc"],[105,30,99,34],[105,32,99,36,"child"],[105,37,99,41],[105,38,99,42,"props"],[105,43,99,47],[105,44,99,48],[106,6,100,8],[106,7,100,9],[106,13,101,13],[106,17,101,17],[106,18,101,18],[106,19,101,19],[106,21,101,21,"utils_1"],[106,28,101,28],[106,29,101,29,"isChildOfType"],[106,42,101,42],[106,44,101,44,"child"],[106,49,101,49],[106,51,101,51,"elements_1"],[106,61,101,61],[106,62,101,62,"Label"],[106,67,101,67],[106,68,101,68],[106,70,101,70],[107,8,102,12,"appendLabelOptions"],[107,26,102,30],[107,27,102,31,"acc"],[107,30,102,34],[107,32,102,36,"child"],[107,37,102,41],[107,38,102,42,"props"],[107,43,102,47],[107,44,102,48],[108,6,103,8],[108,7,103,9],[108,13,104,13],[108,17,104,17],[108,18,104,18],[108,19,104,19],[108,21,104,21,"utils_1"],[108,28,104,28],[108,29,104,29,"isChildOfType"],[108,42,104,42],[108,44,104,44,"child"],[108,49,104,49],[108,51,104,51,"elements_1"],[108,61,104,61],[108,62,104,62,"Icon"],[108,66,104,66],[108,67,104,67],[108,69,104,69],[109,8,105,12,"appendIconOptions"],[109,25,105,29],[109,26,105,30,"acc"],[109,29,105,33],[109,31,105,35,"child"],[109,36,105,40],[109,37,105,41,"props"],[109,42,105,46],[109,43,105,47],[110,6,106,8],[110,7,106,9],[110,13,107,13],[110,17,107,17],[110,18,107,18],[110,19,107,19],[110,21,107,21,"utils_1"],[110,28,107,28],[110,29,107,29,"isChildOfType"],[110,42,107,42],[110,44,107,44,"child"],[110,49,107,49],[110,51,107,51,"NativeTabsTriggerTabBar_1"],[110,76,107,76],[110,77,107,77,"NativeTabsTriggerTabBar"],[110,100,107,100],[110,101,107,101],[110,103,107,103],[111,8,108,12,"appendTabBarOptions"],[111,27,108,31],[111,28,108,32,"acc"],[111,31,108,35],[111,33,108,37,"child"],[111,38,108,42],[111,39,108,43,"props"],[111,44,108,48],[111,45,108,49],[112,6,109,8],[113,6,110,8],[113,13,110,15,"acc"],[113,16,110,18],[114,4,111,4],[114,5,111,5],[114,7,111,7],[115,6,111,9],[115,9,111,12,"initialOptions"],[116,4,111,27],[116,5,111,28],[116,6,111,29],[117,2,112,0],[118,2,113,0],[118,11,113,9,"appendBadgeOptions"],[118,29,113,27,"appendBadgeOptions"],[118,30,113,28,"options"],[118,37,113,35],[118,39,113,37,"props"],[118,44,113,42],[118,46,113,44],[119,4,114,4],[119,8,114,8,"props"],[119,13,114,13],[119,14,114,14,"children"],[119,22,114,22],[119,24,114,24],[120,6,115,8,"options"],[120,13,115,15],[120,14,115,16,"badgeValue"],[120,24,115,26],[120,27,115,29,"String"],[120,33,115,35],[120,34,115,36,"props"],[120,39,115,41],[120,40,115,42,"children"],[120,48,115,50],[120,49,115,51],[121,6,116,8,"options"],[121,13,116,15],[121,14,116,16,"selectedBadgeBackgroundColor"],[121,42,116,44],[121,45,116,47,"props"],[121,50,116,52],[121,51,116,53,"selectedBackgroundColor"],[121,74,116,76],[122,4,117,4],[122,5,117,5],[122,11,118,9],[122,15,118,13],[122,16,118,14,"props"],[122,21,118,19],[122,22,118,20,"hidden"],[122,28,118,26],[122,30,118,28],[123,6,119,8],[124,6,120,8],[125,6,121,8],[126,6,122,8,"options"],[126,13,122,15],[126,14,122,16,"badgeValue"],[126,24,122,26],[126,27,122,29],[126,30,122,32],[127,4,123,4],[128,2,124,0],[129,2,125,0],[129,11,125,9,"appendLabelOptions"],[129,29,125,27,"appendLabelOptions"],[129,30,125,28,"options"],[129,37,125,35],[129,39,125,37,"props"],[129,44,125,42],[129,46,125,44],[130,4,126,4],[130,8,126,8,"props"],[130,13,126,13],[130,14,126,14,"hidden"],[130,20,126,20],[130,22,126,22],[131,6,127,8,"options"],[131,13,127,15],[131,14,127,16,"title"],[131,19,127,21],[131,22,127,24],[131,24,127,26],[132,4,128,4],[132,5,128,5],[132,11,129,9],[133,6,130,8,"options"],[133,13,130,15],[133,14,130,16,"title"],[133,19,130,21],[133,22,130,24,"props"],[133,27,130,29],[133,28,130,30,"children"],[133,36,130,38],[134,6,131,8],[134,10,131,12,"props"],[134,15,131,17],[134,16,131,18,"selectedStyle"],[134,29,131,31],[134,31,131,33],[135,8,132,12,"options"],[135,15,132,19],[135,16,132,20,"selectedLabelStyle"],[135,34,132,38],[135,37,132,41,"props"],[135,42,132,46],[135,43,132,47,"selectedStyle"],[135,56,132,60],[136,6,133,8],[137,4,134,4],[138,2,135,0],[139,2,136,0],[139,11,136,9,"appendIconOptions"],[139,28,136,26,"appendIconOptions"],[139,29,136,27,"options"],[139,36,136,34],[139,38,136,36,"props"],[139,43,136,41],[139,45,136,43],[140,4,137,4],[140,8,137,8],[140,13,137,13],[140,17,137,17,"props"],[140,22,137,22],[140,26,137,26,"props"],[140,31,137,31],[140,32,137,32,"src"],[140,35,137,35],[140,37,137,37],[141,6,138,8],[141,12,138,14,"icon"],[141,16,138,18],[141,19,138,21,"convertIconSrcToIconOption"],[141,45,138,47],[141,46,138,48,"props"],[141,51,138,53],[141,52,138,54],[142,6,139,8,"options"],[142,13,139,15],[142,14,139,16,"icon"],[142,18,139,20],[142,21,139,23,"icon"],[142,25,139,27],[142,27,139,29,"icon"],[142,31,139,33],[143,6,140,8,"options"],[143,13,140,15],[143,14,140,16,"selectedIcon"],[143,26,140,28],[143,29,140,31,"icon"],[143,33,140,35],[143,35,140,37,"selectedIcon"],[143,47,140,49],[144,4,141,4],[144,5,141,5],[144,11,142,9],[144,15,142,13],[144,19,142,17],[144,23,142,21,"props"],[144,28,142,26],[144,37,142,59],[144,39,142,61],[145,6,143,8],[145,10,143,12],[145,17,143,19,"props"],[145,22,143,24],[145,23,143,25,"sf"],[145,25,143,27],[145,30,143,32],[145,38,143,40],[145,40,143,42],[146,8,144,12,"options"],[146,15,144,19],[146,16,144,20,"icon"],[146,20,144,24],[146,23,144,27,"props"],[146,28,144,32],[146,29,144,33,"sf"],[146,31,144,35],[146,34,145,18],[147,10,146,20,"sf"],[147,12,146,22],[147,14,146,24,"props"],[147,19,146,29],[147,20,146,30,"sf"],[148,8,147,16],[148,9,147,17],[148,12,148,18,"undefined"],[148,21,148,27],[149,8,149,12,"options"],[149,15,149,19],[149,16,149,20,"selectedIcon"],[149,28,149,32],[149,31,149,35,"undefined"],[149,40,149,44],[150,6,150,8],[150,7,150,9],[150,13,151,13],[150,17,151,17,"props"],[150,22,151,22],[150,23,151,23,"sf"],[150,25,151,25],[150,27,151,27],[151,8,152,12,"options"],[151,15,152,19],[151,16,152,20,"icon"],[151,20,152,24],[151,23,152,27,"props"],[151,28,152,32],[151,29,152,33,"sf"],[151,31,152,35],[151,32,152,36,"default"],[151,39,152,43],[151,42,153,18],[152,10,154,20,"sf"],[152,12,154,22],[152,14,154,24,"props"],[152,19,154,29],[152,20,154,30,"sf"],[152,22,154,32],[152,23,154,33,"default"],[153,8,155,16],[153,9,155,17],[153,12,156,18,"undefined"],[153,21,156,27],[154,8,157,12,"options"],[154,15,157,19],[154,16,157,20,"selectedIcon"],[154,28,157,32],[154,31,157,35,"props"],[154,36,157,40],[154,37,157,41,"sf"],[154,39,157,43],[154,40,157,44,"selected"],[154,48,157,52],[154,51,158,18],[155,10,159,20,"sf"],[155,12,159,22],[155,14,159,24,"props"],[155,19,159,29],[155,20,159,30,"sf"],[155,22,159,32],[155,23,159,33,"selected"],[156,8,160,16],[156,9,160,17],[156,12,161,18,"undefined"],[156,21,161,27],[157,6,162,8],[158,4,163,4],[158,5,163,5],[158,11,164,9],[158,15,164,13],[158,27,164,25],[158,31,164,29,"props"],[158,36,164,34],[158,45,164,71],[158,47,164,73],[159,6,165,8],[159,12,165,14,"icon"],[159,16,165,18],[159,19,165,21,"convertIconSrcToIconOption"],[159,45,165,47],[159,46,165,48],[160,8,165,50,"src"],[160,11,165,53],[160,13,165,55,"props"],[160,18,165,60],[160,19,165,61,"androidSrc"],[161,6,165,72],[161,7,165,73],[161,8,165,74],[162,6,166,8,"options"],[162,13,166,15],[162,14,166,16,"icon"],[162,18,166,20],[162,21,166,23,"icon"],[162,25,166,27],[162,27,166,29,"icon"],[162,31,166,33],[163,6,167,8,"options"],[163,13,167,15],[163,14,167,16,"selectedIcon"],[163,26,167,28],[163,29,167,31,"icon"],[163,33,167,35],[163,35,167,37,"selectedIcon"],[163,47,167,49],[164,4,168,4],[164,5,168,5],[164,11,169,9],[164,15,169,13],[164,25,169,23],[164,29,169,27,"props"],[164,34,169,32],[164,43,169,69],[164,45,169,71],[165,6,170,8,"options"],[165,13,170,15],[165,14,170,16,"icon"],[165,18,170,20],[165,21,170,23],[166,8,170,25,"drawable"],[166,16,170,33],[166,18,170,35,"props"],[166,23,170,40],[166,24,170,41,"drawable"],[167,6,170,50],[167,7,170,51],[168,6,171,8,"options"],[168,13,171,15],[168,14,171,16,"selectedIcon"],[168,26,171,28],[168,29,171,31,"undefined"],[168,38,171,40],[169,4,172,4],[170,4,173,4],[170,8,173,8,"props"],[170,13,173,13],[170,14,173,14,"selectedColor"],[170,27,173,27],[170,29,173,29],[171,6,174,8,"options"],[171,13,174,15],[171,14,174,16,"selectedIconColor"],[171,31,174,33],[171,34,174,36,"props"],[171,39,174,41],[171,40,174,42,"selectedColor"],[171,53,174,55],[172,4,175,4],[173,2,176,0],[174,2,177,0],[174,11,177,9,"convertIconSrcToIconOption"],[174,37,177,35,"convertIconSrcToIconOption"],[174,38,177,36,"icon"],[174,42,177,40],[174,44,177,42],[175,4,178,4],[175,8,178,8,"icon"],[175,12,178,12],[175,16,178,16,"icon"],[175,20,178,20],[175,21,178,21,"src"],[175,24,178,24],[175,26,178,26],[176,6,179,8],[176,12,179,14],[177,8,179,16,"defaultIcon"],[177,19,179,27],[178,8,179,29,"selected"],[179,6,179,38],[179,7,179,39],[179,10,179,42],[179,17,179,49,"icon"],[179,21,179,53],[179,22,179,54,"src"],[179,25,179,57],[179,30,179,62],[179,38,179,70],[179,42,179,74],[179,52,179,84],[179,56,179,88,"icon"],[179,60,179,92],[179,61,179,93,"src"],[179,64,179,96],[179,67,180,14],[180,8,180,16,"defaultIcon"],[180,19,180,27],[180,21,180,29,"icon"],[180,25,180,33],[180,26,180,34,"src"],[180,29,180,37],[180,30,180,38,"default"],[180,37,180,45],[181,8,180,47,"selected"],[181,16,180,55],[181,18,180,57,"icon"],[181,22,180,61],[181,23,180,62,"src"],[181,26,180,65],[181,27,180,66,"selected"],[182,6,180,75],[182,7,180,76],[182,10,181,14],[183,8,181,16,"defaultIcon"],[183,19,181,27],[183,21,181,29,"icon"],[183,25,181,33],[183,26,181,34,"src"],[184,6,181,38],[184,7,181,39],[185,6,182,8],[185,12,182,14,"options"],[185,19,182,21],[185,22,182,24],[185,23,182,25],[185,24,182,26],[186,6,183,8,"options"],[186,13,183,15],[186,14,183,16,"icon"],[186,18,183,20],[186,21,183,23,"convertSrcOrComponentToSrc"],[186,47,183,49],[186,48,183,50,"defaultIcon"],[186,59,183,61],[186,60,183,62],[187,6,184,8,"options"],[187,13,184,15],[187,14,184,16,"selectedIcon"],[187,26,184,28],[187,29,184,31,"convertSrcOrComponentToSrc"],[187,55,184,57],[187,56,184,58,"selected"],[187,64,184,66],[187,65,184,67],[188,6,185,8],[188,13,185,15,"options"],[188,20,185,22],[189,4,186,4],[190,4,187,4],[190,11,187,11,"undefined"],[190,20,187,20],[191,2,188,0],[192,2,189,0],[192,11,189,9,"convertSrcOrComponentToSrc"],[192,37,189,35,"convertSrcOrComponentToSrc"],[192,38,189,36,"src"],[192,41,189,39],[192,43,189,41],[193,4,190,4],[193,8,190,8,"src"],[193,11,190,11],[193,13,190,13],[194,6,191,8],[194,10,191,12],[194,11,191,13],[194,12,191,14],[194,14,191,16,"react_1"],[194,21,191,23],[194,22,191,24,"isValidElement"],[194,36,191,38],[194,38,191,40,"src"],[194,41,191,43],[194,42,191,44],[194,44,191,46],[195,8,192,12],[195,12,192,16,"src"],[195,15,192,19],[195,16,192,20,"type"],[195,20,192,24],[195,25,192,29,"elements_1"],[195,35,192,39],[195,36,192,40,"VectorIcon"],[195,46,192,50],[195,48,192,52],[196,10,193,16],[196,16,193,22,"props"],[196,21,193,27],[196,24,193,30,"src"],[196,27,193,33],[196,28,193,34,"props"],[196,33,193,39],[197,10,194,16],[197,17,194,23],[198,12,194,25,"src"],[198,15,194,28],[198,17,194,30,"props"],[198,22,194,35],[198,23,194,36,"family"],[198,29,194,42],[198,30,194,43,"getImageSource"],[198,44,194,57],[198,45,194,58,"props"],[198,50,194,63],[198,51,194,64,"name"],[198,55,194,68],[198,57,194,70],[198,59,194,72],[198,61,194,74],[198,68,194,81],[199,10,194,83],[199,11,194,84],[200,8,195,12],[200,9,195,13],[200,15,196,17],[201,10,197,16,"console"],[201,17,197,23],[201,18,197,24,"warn"],[201,22,197,28],[201,23,197,29],[201,84,197,90],[201,85,197,91],[202,8,198,12],[203,6,199,8],[203,7,199,9],[203,13,200,13],[204,8,201,12],[204,15,201,19],[205,10,201,21,"src"],[206,8,201,25],[206,9,201,26],[207,6,202,8],[208,4,203,4],[209,4,204,4],[209,11,204,11,"undefined"],[209,20,204,20],[210,2,205,0],[211,2,206,0],[211,11,206,9,"appendTabBarOptions"],[211,30,206,28,"appendTabBarOptions"],[211,31,206,29,"options"],[211,38,206,36],[211,40,206,38,"props"],[211,45,206,43],[211,47,206,45],[212,4,207,4],[212,10,207,10],[213,6,207,12,"backgroundColor"],[213,21,207,27],[214,6,207,29,"blurEffect"],[214,16,207,39],[215,6,207,41,"iconColor"],[215,15,207,50],[216,6,207,52,"disableTransparentOnScrollEdge"],[216,36,207,82],[217,6,207,84,"badgeBackgroundColor"],[217,26,207,104],[218,6,207,106,"badgeTextColor"],[218,20,207,120],[219,6,207,122,"indicatorColor"],[219,20,207,136],[220,6,207,138,"labelStyle"],[220,16,207,148],[221,6,207,150,"shadowColor"],[222,4,207,163],[222,5,207,164],[222,8,207,167,"props"],[222,13,207,172],[223,4,208,4],[223,8,208,8,"backgroundColor"],[223,23,208,23],[223,25,208,25],[224,6,209,8,"options"],[224,13,209,15],[224,14,209,16,"backgroundColor"],[224,29,209,31],[224,32,209,34,"backgroundColor"],[224,47,209,49],[225,4,210,4],[226,4,211,4],[227,4,212,4],[228,4,213,4],[228,14,213,43],[229,6,214,8],[229,10,214,12,"blurEffect"],[229,20,214,22],[229,22,214,24],[230,8,215,12,"options"],[230,15,215,19],[230,16,215,20,"blurEffect"],[230,26,215,30],[230,29,215,33,"blurEffect"],[230,39,215,43],[231,6,216,8],[232,6,217,8],[232,10,217,12,"shadowColor"],[232,21,217,23],[232,23,217,25],[233,8,218,12,"options"],[233,15,218,19],[233,16,218,20,"shadowColor"],[233,27,218,31],[233,30,218,34,"shadowColor"],[233,41,218,45],[234,6,219,8],[235,6,220,8],[235,10,220,12,"iconColor"],[235,19,220,21],[235,21,220,23],[236,8,221,12,"options"],[236,15,221,19],[236,16,221,20,"iconColor"],[236,25,221,29],[236,28,221,32,"iconColor"],[236,37,221,41],[237,6,222,8],[238,6,223,8],[238,10,223,12,"disableTransparentOnScrollEdge"],[238,40,223,42],[238,45,223,47,"undefined"],[238,54,223,56],[238,56,223,58],[239,8,224,12,"options"],[239,15,224,19],[239,16,224,20,"disableTransparentOnScrollEdge"],[239,46,224,50],[239,49,224,53,"disableTransparentOnScrollEdge"],[239,79,224,83],[240,6,225,8],[241,6,226,8],[241,10,226,12,"badgeBackgroundColor"],[241,30,226,32],[241,32,226,34],[242,8,227,12,"options"],[242,15,227,19],[242,16,227,20,"badgeBackgroundColor"],[242,36,227,40],[242,39,227,43,"badgeBackgroundColor"],[242,59,227,63],[243,6,228,8],[244,6,229,8],[244,10,229,12,"badgeTextColor"],[244,24,229,26],[244,26,229,28],[245,8,230,12,"options"],[245,15,230,19],[245,16,230,20,"badgeTextColor"],[245,30,230,34],[245,33,230,37,"badgeTextColor"],[245,47,230,51],[246,6,231,8],[247,6,232,8],[247,10,232,12,"indicatorColor"],[247,24,232,26],[247,26,232,28],[248,8,233,12,"options"],[248,15,233,19],[248,16,233,20,"indicatorColor"],[248,30,233,34],[248,33,233,37,"indicatorColor"],[248,47,233,51],[249,6,234,8],[250,6,235,8],[250,10,235,12,"labelStyle"],[250,20,235,22],[250,22,235,24],[251,8,236,12,"options"],[251,15,236,19],[251,16,236,20,"labelStyle"],[251,26,236,30],[251,29,236,33,"labelStyle"],[251,39,236,43],[252,6,237,8],[253,4,238,4],[254,2,239,0],[255,2,240,0],[255,11,240,9,"isNativeTabTrigger"],[255,29,240,27,"isNativeTabTrigger"],[255,30,240,28,"child"],[255,35,240,33],[255,37,240,35,"contextKey"],[255,47,240,45],[255,49,240,47],[256,4,241,4],[256,8,241,8],[256,9,241,9],[256,10,241,10],[256,12,241,12,"react_1"],[256,19,241,19],[256,20,241,20,"isValidElement"],[256,34,241,34],[256,36,241,36,"child"],[256,41,241,41],[256,42,241,42],[256,46,241,46,"child"],[256,51,241,51],[256,55,241,55,"child"],[256,60,241,60],[256,61,241,61,"type"],[256,65,241,65],[256,70,241,70,"exports"],[256,77,241,77],[256,78,241,78,"NativeTabTrigger"],[256,94,241,94],[256,96,241,96],[257,6,242,8],[257,10,242,12],[257,17,242,19,"child"],[257,22,242,24],[257,23,242,25,"props"],[257,28,242,30],[257,33,242,35],[257,41,242,43],[257,45,243,12,"child"],[257,50,243,17],[257,51,243,18,"props"],[257,56,243,23],[257,60,244,12],[257,66,244,18],[257,70,244,22,"child"],[257,75,244,27],[257,76,244,28,"props"],[257,81,244,33],[257,85,245,12],[257,86,245,13,"child"],[257,91,245,18],[257,92,245,19,"props"],[257,97,245,24],[257,98,245,25,"name"],[257,102,245,29],[257,104,245,31],[258,8,246,12],[258,14,246,18],[258,18,246,22,"Error"],[258,23,246,27],[258,24,246,28],[258,79,246,83,"contextKey"],[258,89,246,93],[258,167,246,171],[258,168,246,172],[259,6,247,8],[260,6,248,8],[260,10,248,12,"process"],[260,17,248,19],[260,18,248,20,"env"],[260,21,248,23],[260,22,248,24,"NODE_ENV"],[260,30,248,32],[260,35,248,37],[260,47,248,49],[260,49,248,51],[261,8,249,12],[261,12,249,16],[261,13,249,17],[261,24,249,28],[261,26,249,30],[261,40,249,44],[261,41,249,45],[261,42,249,46,"some"],[261,46,249,50],[261,47,249,52,"key"],[261,50,249,55],[261,54,249,60,"child"],[261,59,249,65],[261,60,249,66,"props"],[261,65,249,71],[261,69,249,75],[261,76,249,82,"child"],[261,81,249,87],[261,82,249,88,"props"],[261,87,249,93],[261,92,249,98],[261,100,249,106],[261,104,249,110,"key"],[261,107,249,113],[261,111,249,117,"child"],[261,116,249,122],[261,117,249,123,"props"],[261,122,249,128],[261,123,249,129],[261,125,249,131],[262,10,250,16],[262,16,250,22],[262,20,250,26,"Error"],[262,25,250,31],[262,26,250,32],[262,81,250,87,"contextKey"],[262,91,250,97],[262,197,250,203],[262,198,250,204],[263,8,251,12],[264,6,252,8],[265,6,253,8],[265,13,253,15],[265,17,253,19],[266,4,254,4],[267,4,255,4],[267,11,255,11],[267,16,255,16],[268,2,256,0],[269,0,256,1],[269,3]],"functionMap":{"names":["<global>","NativeTabTriggerImpl","<anonymous>","convertTabPropsToOptions","allowedChildren.reduce$argument_0","appendBadgeOptions","appendLabelOptions","appendIconOptions","convertIconSrcToIconOption","convertSrcOrComponentToSrc","appendTabBarOptions","isNativeTabTrigger","some$argument_0"],"mappings":"AAA;ACsD;mDCK;KDW;CDE;AGI;kCCoB;KDc;CHC;AKC;CLW;AMC;CNU;AOC;CPwC;AQC;CRW;ASC;CTgB;AUC;CViC;AWC;mDCS,6ED;CXO"},"hasCjsExports":true},"type":"js/module"}]}