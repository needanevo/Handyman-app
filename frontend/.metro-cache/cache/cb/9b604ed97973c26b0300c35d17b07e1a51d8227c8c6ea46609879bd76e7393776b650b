{"dependencies":[{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"servicesAPI\", {\n    enumerable: true,\n    get: function () {\n      return servicesAPI;\n    }\n  });\n  Object.defineProperty(exports, \"quotesAPI\", {\n    enumerable: true,\n    get: function () {\n      return quotesAPI;\n    }\n  });\n  Object.defineProperty(exports, \"profileAPI\", {\n    enumerable: true,\n    get: function () {\n      return profileAPI;\n    }\n  });\n  Object.defineProperty(exports, \"healthAPI\", {\n    enumerable: true,\n    get: function () {\n      return healthAPI;\n    }\n  });\n  var _axios = require(_dependencyMap[0], \"axios\");\n  var axios = _interopDefault(_axios);\n  // Get backend URL from environment\n  const BACKEND_URL = process.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  class APIClient {\n    authToken = null;\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Request interceptor to add auth token\n      this.client.interceptors.request.use(config => {\n        if (this.authToken) {\n          config.headers.Authorization = `Bearer ${this.authToken}`;\n        }\n        return config;\n      });\n\n      // Response interceptor for error handling\n      this.client.interceptors.response.use(response => response, error => {\n        if (error.response?.status === 401) {\n          // Handle unauthorized - could trigger logout\n          this.clearAuthToken();\n        }\n        return Promise.reject(error);\n      });\n    }\n    setAuthToken(token) {\n      this.authToken = token;\n    }\n    clearAuthToken() {\n      this.authToken = null;\n    }\n\n    // Generic request methods\n    async get(url, params) {\n      const response = await this.client.get(url, {\n        params\n      });\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n  }\n\n  // Create API client instance\n  const apiClient = new APIClient();\n\n  // Authentication API\n  const authAPI = {\n    login: credentials => apiClient.post('/auth/login', credentials),\n    register: userData => apiClient.post('/auth/register', userData),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    setAuthToken: token => apiClient.setAuthToken(token),\n    clearAuthToken: () => apiClient.clearAuthToken()\n  };\n\n  // Services API\n  const servicesAPI = {\n    getServices: category => apiClient.get('/services', category ? {\n      category\n    } : undefined),\n    getService: id => apiClient.get(`/services/${id}`)\n  };\n\n  // Quotes API\n  const quotesAPI = {\n    requestQuote: quoteData => apiClient.post('/quotes/request', quoteData),\n    getQuotes: status => apiClient.get('/quotes', status ? {\n      status_filter: status\n    } : undefined),\n    getQuote: id => apiClient.get(`/quotes/${id}`),\n    respondToQuote: (id, response) => apiClient.post(`/quotes/${id}/respond`, response)\n  };\n\n  // Profile API\n  const profileAPI = {\n    addAddress: address => apiClient.post('/profile/addresses', address),\n    getAddresses: () => apiClient.get('/profile/addresses')\n  };\n\n  // Health check\n  const healthAPI = {\n    check: () => apiClient.get('/health')\n  };\n  var _default = apiClient;\n});","lineCount":149,"map":[[12,2,127,0,"Object"],[12,8,127,0],[12,9,127,0,"defineProperty"],[12,23,127,0],[12,24,127,0,"exports"],[12,31,127,0],[13,4,127,0,"enumerable"],[13,14,127,0],[14,4,127,0,"get"],[14,7,127,0],[14,18,127,0,"get"],[14,19,127,0],[15,6,127,0],[15,13,127,0,"_default"],[15,21,127,0],[16,4,127,0],[17,2,127,0],[18,2,75,0,"Object"],[18,8,75,0],[18,9,75,0,"defineProperty"],[18,23,75,0],[18,24,75,0,"exports"],[18,31,75,0],[19,4,75,0,"enumerable"],[19,14,75,0],[20,4,75,0,"get"],[20,7,75,0],[20,18,75,0,"get"],[20,19,75,0],[21,6,75,0],[21,13,75,0,"authAPI"],[21,20,75,0],[22,4,75,0],[23,2,75,0],[24,2,90,0,"Object"],[24,8,90,0],[24,9,90,0,"defineProperty"],[24,23,90,0],[24,24,90,0,"exports"],[24,31,90,0],[25,4,90,0,"enumerable"],[25,14,90,0],[26,4,90,0,"get"],[26,7,90,0],[26,18,90,0,"get"],[26,19,90,0],[27,6,90,0],[27,13,90,0,"servicesAPI"],[27,24,90,0],[28,4,90,0],[29,2,90,0],[30,2,99,0,"Object"],[30,8,99,0],[30,9,99,0,"defineProperty"],[30,23,99,0],[30,24,99,0,"exports"],[30,31,99,0],[31,4,99,0,"enumerable"],[31,14,99,0],[32,4,99,0,"get"],[32,7,99,0],[32,18,99,0,"get"],[32,19,99,0],[33,6,99,0],[33,13,99,0,"quotesAPI"],[33,22,99,0],[34,4,99,0],[35,2,99,0],[36,2,114,0,"Object"],[36,8,114,0],[36,9,114,0,"defineProperty"],[36,23,114,0],[36,24,114,0,"exports"],[36,31,114,0],[37,4,114,0,"enumerable"],[37,14,114,0],[38,4,114,0,"get"],[38,7,114,0],[38,18,114,0,"get"],[38,19,114,0],[39,6,114,0],[39,13,114,0,"profileAPI"],[39,23,114,0],[40,4,114,0],[41,2,114,0],[42,2,123,0,"Object"],[42,8,123,0],[42,9,123,0,"defineProperty"],[42,23,123,0],[42,24,123,0,"exports"],[42,31,123,0],[43,4,123,0,"enumerable"],[43,14,123,0],[44,4,123,0,"get"],[44,7,123,0],[44,18,123,0,"get"],[44,19,123,0],[45,6,123,0],[45,13,123,0,"healthAPI"],[45,22,123,0],[46,4,123,0],[47,2,123,0],[48,2,1,0],[48,6,1,0,"_axios"],[48,12,1,0],[48,15,1,0,"require"],[48,22,1,0],[48,23,1,0,"_dependencyMap"],[48,37,1,0],[49,2,1,0],[49,6,1,0,"axios"],[49,11,1,0],[49,14,1,0,"_interopDefault"],[49,29,1,0],[49,30,1,0,"_axios"],[49,36,1,0],[50,2,4,0],[51,2,5,0],[51,8,5,6,"BACKEND_URL"],[51,19,5,17],[51,22,5,20,"process"],[51,29,5,27],[51,30,5,28,"env"],[51,33,5,31],[51,34,5,32,"EXPO_PUBLIC_BACKEND_URL"],[51,57,5,55],[51,61,5,59],[51,84,5,82],[52,2,7,0],[52,8,7,6,"APIClient"],[52,17,7,15],[52,18,7,16],[53,4,9,10,"authToken"],[53,13,9,19],[53,16,9,37],[53,20,9,41],[54,4,11,2,"constructor"],[54,15,11,13,"constructor"],[54,16,11,13],[54,18,11,16],[55,6,12,4],[55,10,12,8],[55,11,12,9,"client"],[55,17,12,15],[55,20,12,18,"axios"],[55,25,12,23],[55,26,12,23,"default"],[55,33,12,23],[55,34,12,24,"create"],[55,40,12,30],[55,41,12,31],[56,8,13,6,"baseURL"],[56,15,13,13],[56,17,13,15],[56,20,13,18,"BACKEND_URL"],[56,31,13,29],[56,37,13,35],[57,8,14,6,"timeout"],[57,15,14,13],[57,17,14,15],[57,22,14,20],[58,8,15,6,"headers"],[58,15,15,13],[58,17,15,15],[59,10,16,8],[59,24,16,22],[59,26,16,24],[60,8,17,6],[61,6,18,4],[61,7,18,5],[61,8,18,6],[63,6,20,4],[64,6,21,4],[64,10,21,8],[64,11,21,9,"client"],[64,17,21,15],[64,18,21,16,"interceptors"],[64,30,21,28],[64,31,21,29,"request"],[64,38,21,36],[64,39,21,37,"use"],[64,42,21,40],[64,43,21,42,"config"],[64,49,21,48],[64,53,21,53],[65,8,22,6],[65,12,22,10],[65,16,22,14],[65,17,22,15,"authToken"],[65,26,22,24],[65,28,22,26],[66,10,23,8,"config"],[66,16,23,14],[66,17,23,15,"headers"],[66,24,23,22],[66,25,23,23,"Authorization"],[66,38,23,36],[66,41,23,39],[66,51,23,49],[66,55,23,53],[66,56,23,54,"authToken"],[66,65,23,63],[66,67,23,65],[67,8,24,6],[68,8,25,6],[68,15,25,13,"config"],[68,21,25,19],[69,6,26,4],[69,7,26,5],[69,8,26,6],[71,6,28,4],[72,6,29,4],[72,10,29,8],[72,11,29,9,"client"],[72,17,29,15],[72,18,29,16,"interceptors"],[72,30,29,28],[72,31,29,29,"response"],[72,39,29,37],[72,40,29,38,"use"],[72,43,29,41],[72,44,30,7,"response"],[72,52,30,15],[72,56,30,20,"response"],[72,64,30,28],[72,66,31,7,"error"],[72,71,31,12],[72,75,31,17],[73,8,32,8],[73,12,32,12,"error"],[73,17,32,17],[73,18,32,18,"response"],[73,26,32,26],[73,28,32,28,"status"],[73,34,32,34],[73,39,32,39],[73,42,32,42],[73,44,32,44],[74,10,33,10],[75,10,34,10],[75,14,34,14],[75,15,34,15,"clearAuthToken"],[75,29,34,29],[75,30,34,30],[75,31,34,31],[76,8,35,8],[77,8,36,8],[77,15,36,15,"Promise"],[77,22,36,22],[77,23,36,23,"reject"],[77,29,36,29],[77,30,36,30,"error"],[77,35,36,35],[77,36,36,36],[78,6,37,6],[78,7,38,4],[78,8,38,5],[79,4,39,2],[80,4,41,2,"setAuthToken"],[80,16,41,14,"setAuthToken"],[80,17,41,15,"token"],[80,22,41,28],[80,24,41,30],[81,6,42,4],[81,10,42,8],[81,11,42,9,"authToken"],[81,20,42,18],[81,23,42,21,"token"],[81,28,42,26],[82,4,43,2],[83,4,45,2,"clearAuthToken"],[83,18,45,16,"clearAuthToken"],[83,19,45,16],[83,21,45,19],[84,6,46,4],[84,10,46,8],[84,11,46,9,"authToken"],[84,20,46,18],[84,23,46,21],[84,27,46,25],[85,4,47,2],[87,4,49,2],[88,4,50,2],[88,10,50,8,"get"],[88,13,50,11,"get"],[88,14,50,15,"url"],[88,17,50,26],[88,19,50,28,"params"],[88,25,50,40],[88,27,50,54],[89,6,51,4],[89,12,51,10,"response"],[89,20,51,36],[89,23,51,39],[89,29,51,45],[89,33,51,49],[89,34,51,50,"client"],[89,40,51,56],[89,41,51,57,"get"],[89,44,51,60],[89,45,51,61,"url"],[89,48,51,64],[89,50,51,66],[90,8,51,68,"params"],[91,6,51,75],[91,7,51,76],[91,8,51,77],[92,6,52,4],[92,13,52,11,"response"],[92,21,52,19],[92,22,52,20,"data"],[92,26,52,24],[93,4,53,2],[94,4,55,2],[94,10,55,8,"post"],[94,14,55,12,"post"],[94,15,55,16,"url"],[94,18,55,27],[94,20,55,29,"data"],[94,24,55,39],[94,26,55,53],[95,6,56,4],[95,12,56,10,"response"],[95,20,56,36],[95,23,56,39],[95,29,56,45],[95,33,56,49],[95,34,56,50,"client"],[95,40,56,56],[95,41,56,57,"post"],[95,45,56,61],[95,46,56,62,"url"],[95,49,56,65],[95,51,56,67,"data"],[95,55,56,71],[95,56,56,72],[96,6,57,4],[96,13,57,11,"response"],[96,21,57,19],[96,22,57,20,"data"],[96,26,57,24],[97,4,58,2],[98,4,60,2],[98,10,60,8,"put"],[98,13,60,11,"put"],[98,14,60,15,"url"],[98,17,60,26],[98,19,60,28,"data"],[98,23,60,38],[98,25,60,52],[99,6,61,4],[99,12,61,10,"response"],[99,20,61,36],[99,23,61,39],[99,29,61,45],[99,33,61,49],[99,34,61,50,"client"],[99,40,61,56],[99,41,61,57,"put"],[99,44,61,60],[99,45,61,61,"url"],[99,48,61,64],[99,50,61,66,"data"],[99,54,61,70],[99,55,61,71],[100,6,62,4],[100,13,62,11,"response"],[100,21,62,19],[100,22,62,20,"data"],[100,26,62,24],[101,4,63,2],[102,4,65,2],[102,10,65,8,"delete"],[102,16,65,14,"delete"],[102,17,65,18,"url"],[102,20,65,29],[102,22,65,43],[103,6,66,4],[103,12,66,10,"response"],[103,20,66,36],[103,23,66,39],[103,29,66,45],[103,33,66,49],[103,34,66,50,"client"],[103,40,66,56],[103,41,66,57,"delete"],[103,47,66,63],[103,48,66,64,"url"],[103,51,66,67],[103,52,66,68],[104,6,67,4],[104,13,67,11,"response"],[104,21,67,19],[104,22,67,20,"data"],[104,26,67,24],[105,4,68,2],[106,2,69,0],[108,2,71,0],[109,2,72,0],[109,8,72,6,"apiClient"],[109,17,72,15],[109,20,72,18],[109,24,72,22,"APIClient"],[109,33,72,31],[109,34,72,32],[109,35,72,33],[111,2,74,0],[112,2,75,7],[112,8,75,13,"authAPI"],[112,15,75,20],[112,18,75,23],[113,4,76,2,"login"],[113,9,76,7],[113,11,76,10,"credentials"],[113,22,76,58],[113,26,77,4,"apiClient"],[113,35,77,13],[113,36,77,14,"post"],[113,40,77,18],[113,41,77,88],[113,54,77,101],[113,56,77,103,"credentials"],[113,67,77,114],[113,68,77,115],[114,4,79,2,"register"],[114,12,79,10],[114,14,79,13,"userData"],[114,22,79,26],[114,26,80,4,"apiClient"],[114,35,80,13],[114,36,80,14,"post"],[114,40,80,18],[114,41,80,88],[114,57,80,104],[114,59,80,106,"userData"],[114,67,80,114],[114,68,80,115],[115,4,82,2,"getCurrentUser"],[115,18,82,16],[115,20,82,18,"getCurrentUser"],[115,21,82,18],[115,26,82,24,"apiClient"],[115,35,82,33],[115,36,82,34,"get"],[115,39,82,37],[115,40,82,43],[115,50,82,53],[115,51,82,54],[116,4,84,2,"setAuthToken"],[116,16,84,14],[116,18,84,17,"token"],[116,23,84,30],[116,27,84,35,"apiClient"],[116,36,84,44],[116,37,84,45,"setAuthToken"],[116,49,84,57],[116,50,84,58,"token"],[116,55,84,63],[116,56,84,64],[117,4,86,2,"clearAuthToken"],[117,18,86,16],[117,20,86,18,"clearAuthToken"],[117,21,86,18],[117,26,86,24,"apiClient"],[117,35,86,33],[117,36,86,34,"clearAuthToken"],[117,50,86,48],[117,51,86,49],[118,2,87,0],[118,3,87,1],[120,2,89,0],[121,2,90,7],[121,8,90,13,"servicesAPI"],[121,19,90,24],[121,22,90,27],[122,4,91,2,"getServices"],[122,15,91,13],[122,17,91,16,"category"],[122,25,91,33],[122,29,92,4,"apiClient"],[122,38,92,13],[122,39,92,14,"get"],[122,42,92,17],[122,43,92,25],[122,54,92,36],[122,56,92,38,"category"],[122,64,92,46],[122,67,92,49],[123,6,92,51,"category"],[124,4,92,60],[124,5,92,61],[124,8,92,64,"undefined"],[124,17,92,73],[124,18,92,74],[125,4,94,2,"getService"],[125,14,94,12],[125,16,94,15,"id"],[125,18,94,25],[125,22,95,4,"apiClient"],[125,31,95,13],[125,32,95,14,"get"],[125,35,95,17],[125,36,95,23],[125,49,95,36,"id"],[125,51,95,38],[125,53,95,40],[126,2,96,0],[126,3,96,1],[128,2,98,0],[129,2,99,7],[129,8,99,13,"quotesAPI"],[129,17,99,22],[129,20,99,25],[130,4,100,2,"requestQuote"],[130,16,100,14],[130,18,100,17,"quoteData"],[130,27,100,31],[130,31,101,4,"apiClient"],[130,40,101,13],[130,41,101,14,"post"],[130,45,101,18],[130,46,101,24],[130,63,101,41],[130,65,101,43,"quoteData"],[130,74,101,52],[130,75,101,53],[131,4,103,2,"getQuotes"],[131,13,103,11],[131,15,103,14,"status"],[131,21,103,29],[131,25,104,4,"apiClient"],[131,34,104,13],[131,35,104,14,"get"],[131,38,104,17],[131,39,104,25],[131,48,104,34],[131,50,104,36,"status"],[131,56,104,42],[131,59,104,45],[132,6,104,47,"status_filter"],[132,19,104,60],[132,21,104,62,"status"],[133,4,104,69],[133,5,104,70],[133,8,104,73,"undefined"],[133,17,104,82],[133,18,104,83],[134,4,106,2,"getQuote"],[134,12,106,10],[134,14,106,13,"id"],[134,16,106,23],[134,20,107,4,"apiClient"],[134,29,107,13],[134,30,107,14,"get"],[134,33,107,17],[134,34,107,23],[134,45,107,34,"id"],[134,47,107,36],[134,49,107,38],[134,50,107,39],[135,4,109,2,"respondToQuote"],[135,18,109,16],[135,20,109,18,"respondToQuote"],[135,21,109,19,"id"],[135,23,109,29],[135,25,109,31,"response"],[135,33,109,85],[135,38,110,4,"apiClient"],[135,47,110,13],[135,48,110,14,"post"],[135,52,110,18],[135,53,110,24],[135,64,110,35,"id"],[135,66,110,37],[135,76,110,47],[135,78,110,49,"response"],[135,86,110,57],[136,2,111,0],[136,3,111,1],[138,2,113,0],[139,2,114,7],[139,8,114,13,"profileAPI"],[139,18,114,23],[139,21,114,26],[140,4,115,2,"addAddress"],[140,14,115,12],[140,16,115,15,"address"],[140,23,115,27],[140,27,116,4,"apiClient"],[140,36,116,13],[140,37,116,14,"post"],[140,41,116,18],[140,42,116,24],[140,62,116,44],[140,64,116,46,"address"],[140,71,116,53],[140,72,116,54],[141,4,118,2,"getAddresses"],[141,16,118,14],[141,18,118,16,"getAddresses"],[141,19,118,16],[141,24,119,4,"apiClient"],[141,33,119,13],[141,34,119,14,"get"],[141,37,119,17],[141,38,119,25],[141,58,119,45],[142,2,120,0],[142,3,120,1],[144,2,122,0],[145,2,123,7],[145,8,123,13,"healthAPI"],[145,17,123,22],[145,20,123,25],[146,4,124,2,"check"],[146,9,124,7],[146,11,124,9,"check"],[146,12,124,9],[146,17,124,15,"apiClient"],[146,26,124,24],[146,27,124,25,"get"],[146,30,124,28],[146,31,124,68],[146,40,124,77],[147,2,125,0],[147,3,125,1],[148,2,127,0],[148,6,127,0,"_default"],[148,14,127,0],[148,17,127,15,"apiClient"],[148,26,127,24],[149,0,127,25],[149,3]],"functionMap":{"names":["<global>","APIClient","APIClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","APIClient#setAuthToken","APIClient#clearAuthToken","APIClient#get","APIClient#post","APIClient#put","APIClient#_delete","authAPI.login","authAPI.register","authAPI.getCurrentUser","authAPI.setAuthToken","authAPI.clearAuthToken","servicesAPI.getServices","servicesAPI.getService","quotesAPI.requestQuote","quotesAPI.getQuotes","quotesAPI.getQuote","quotesAPI.respondToQuote","profileAPI.addAddress","profileAPI.getAddresses","healthAPI.check"],"mappings":"AAA;ACM;ECI;yCCU;KDK;MEI,sBF;MGC;OHM;GDE;EKE;GLE;EME;GNE;EOG;GPG;EQE;GRG;ESE;GTG;EUE;GVG;CDC;SYO;mHZC;YaE;mHbC;kBcE,oCd;gBeE,gDf;kBgBE,gChB;eiBK;0EjBC;ckBE;yClBC;gBmBK;qDnBC;aoBE;mFpBC;YqBE;uCrBC;kBsBE;0DtBC;cuBK;sDvBC;gBwBE;8CxBC;SyBK,qEzB"},"hasCjsExports":false},"type":"js/module"}]}