{"dependencies":[{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":17,"index":300},"end":{"line":8,"column":52,"index":335}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":353},"end":{"line":9,"column":32,"index":369}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"./NativeTabsTriggerTabBar","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":34,"index":405},"end":{"line":10,"column":70,"index":441}}],"key":"WVwnFVa4tbZlC8q45AzhMA62QpY=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":16,"index":459},"end":{"line":11,"column":34,"index":477}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8=","exportNames":["*"],"imports":1}},{"name":"../../link/preview/PreviewRouteContext","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":30,"index":509},"end":{"line":12,"column":79,"index":558}}],"key":"RjOiGG3bmFq3DQhcV/pBDiHQb00=","exportNames":["*"],"imports":1}},{"name":"../../views/useSafeLayoutEffect","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":30,"index":590},"end":{"line":13,"column":72,"index":632}}],"key":"+Bqbcz5xwcnBwCK/TVf05V4tLZ8=","exportNames":["*"],"imports":1}},{"name":"../common/elements","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":19,"index":653},"end":{"line":14,"column":48,"index":682}}],"key":"1RFkZDeCNqyJBPS3jQJ086fMimI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n  'use client';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.NativeTabTrigger = void 0;\n  exports.convertTabPropsToOptions = convertTabPropsToOptions;\n  exports.appendIconOptions = appendIconOptions;\n  exports.isNativeTabTrigger = isNativeTabTrigger;\n  const native_1 = require(_dependencyMap[0], \"@react-navigation/native\");\n  const react_1 = require(_dependencyMap[1], \"react\");\n  const NativeTabsTriggerTabBar_1 = require(_dependencyMap[2], \"./NativeTabsTriggerTabBar\");\n  const utils_1 = require(_dependencyMap[3], \"./utils\");\n  const PreviewRouteContext_1 = require(_dependencyMap[4], \"../../link/preview/PreviewRouteContext\");\n  const useSafeLayoutEffect_1 = require(_dependencyMap[5], \"../../views/useSafeLayoutEffect\");\n  const elements_1 = require(_dependencyMap[6], \"../common/elements\");\n  /**\n   * The component used to customize the native tab options both in the _layout file and from the tab screen.\n   *\n   * When used in the _layout file, you need to provide a `name` prop.\n   * When used in the tab screen, the `name` prop takes no effect.\n   *\n   * @example\n   * ```tsx\n   * // In _layout file\n   * import { NativeTabs } from 'expo-router/unstable-native-tabs';\n   *\n   * export default function Layout() {\n   *   return (\n   *     <NativeTabs>\n   *       <NativeTabs.Trigger name=\"home\" />\n   *       <NativeTabs.Trigger name=\"settings\" />\n   *     </NativeTabs>\n   *   );\n   * }\n   * ```\n   *\n   * @example\n   * ```tsx\n   * // In a tab screen\n   * import { NativeTabs } from 'expo-router/unstable-native-tabs';\n   *\n   * export default function HomeScreen() {\n   *   return (\n   *     <View>\n   *       <NativeTabs.Trigger>\n   *         <Label>Home</Label>\n   *       </NativeTabs.Trigger>\n   *       <Text>This is home screen!</Text>\n   *     </View>\n   *   );\n   * }\n   * ```\n   *\n   * > **Note:** You can use the alias `NativeTabs.Trigger` for this component.\n   */\n  function NativeTabTriggerImpl(props) {\n    const route = (0, native_1.useRoute)();\n    const navigation = (0, native_1.useNavigation)();\n    const isFocused = navigation.isFocused();\n    const isInPreview = (0, PreviewRouteContext_1.useIsPreview)();\n    (0, useSafeLayoutEffect_1.useSafeLayoutEffect)(() => {\n      // This will cause the tab to update only when it is focused.\n      // As long as all tabs are loaded at the start, we don't need this check.\n      // It is here to ensure similar behavior to stack\n      if (isFocused && !isInPreview) {\n        if (navigation.getState()?.type !== 'tab') {\n          throw new Error(`Trigger component can only be used in the tab screen. Current route: ${route.name}`);\n        }\n        const options = convertTabPropsToOptions(props, true);\n        navigation.setOptions(options);\n      }\n    }, [isFocused, props, isInPreview]);\n    return null;\n  }\n  exports.NativeTabTrigger = Object.assign(NativeTabTriggerImpl, {\n    TabBar: NativeTabsTriggerTabBar_1.NativeTabsTriggerTabBar\n  });\n  function convertTabPropsToOptions({\n    options,\n    hidden,\n    children,\n    role,\n    disablePopToTop,\n    disableScrollToTop\n  }, isDynamic = false) {\n    const initialOptions = isDynamic ? Object.assign({}, options) : Object.assign({}, options, {\n      hidden: !!hidden,\n      specialEffects: {\n        repeatedTabSelection: {\n          popToRoot: !disablePopToTop,\n          scrollToTop: !disableScrollToTop\n        }\n      },\n      role: role ?? options?.role\n    });\n    const allowedChildren = (0, utils_1.filterAllowedChildrenElements)(children, [elements_1.Badge, elements_1.Label, elements_1.Icon, NativeTabsTriggerTabBar_1.NativeTabsTriggerTabBar]);\n    return allowedChildren.reduce((acc, child) => {\n      if ((0, utils_1.isChildOfType)(child, elements_1.Badge)) {\n        appendBadgeOptions(acc, child.props);\n      } else if ((0, utils_1.isChildOfType)(child, elements_1.Label)) {\n        appendLabelOptions(acc, child.props);\n      } else if ((0, utils_1.isChildOfType)(child, elements_1.Icon)) {\n        appendIconOptions(acc, child.props);\n      } else if ((0, utils_1.isChildOfType)(child, NativeTabsTriggerTabBar_1.NativeTabsTriggerTabBar)) {\n        appendTabBarOptions(acc, child.props);\n      }\n      return acc;\n    }, Object.assign({}, initialOptions));\n  }\n  function appendBadgeOptions(options, props) {\n    if (props.children) {\n      options.badgeValue = String(props.children);\n      options.selectedBadgeBackgroundColor = props.selectedBackgroundColor;\n    } else if (!props.hidden) {\n      // If no value is provided, we set it to a space to show the badge\n      // Otherwise, the `react-native-screens` will interpret it as a hidden badge\n      // https://github.com/software-mansion/react-native-screens/blob/b4358fd95dd0736fc54df6bb97f210dc89edf24c/ios/bottom-tabs/RNSBottomTabsScreenComponentView.mm#L172\n      options.badgeValue = ' ';\n    }\n  }\n  function appendLabelOptions(options, props) {\n    if (props.hidden) {\n      options.title = '';\n    } else {\n      options.title = props.children;\n      if (props.selectedStyle) {\n        options.selectedLabelStyle = props.selectedStyle;\n      }\n    }\n  }\n  function appendIconOptions(options, props) {\n    if ('src' in props && props.src) {\n      const icon = convertIconSrcToIconOption(props);\n      options.icon = icon?.icon;\n      options.selectedIcon = icon?.selectedIcon;\n    } else if ('sf' in props && false) {\n      if (typeof props.sf === 'string') {\n        options.icon = props.sf ? {\n          sf: props.sf\n        } : undefined;\n        options.selectedIcon = undefined;\n      } else if (props.sf) {\n        options.icon = props.sf.default ? {\n          sf: props.sf.default\n        } : undefined;\n        options.selectedIcon = props.sf.selected ? {\n          sf: props.sf.selected\n        } : undefined;\n      }\n    } else if ('androidSrc' in props && false) {\n      const icon = convertIconSrcToIconOption({\n        src: props.androidSrc\n      });\n      options.icon = icon?.icon;\n      options.selectedIcon = icon?.selectedIcon;\n    } else if ('drawable' in props && false) {\n      options.icon = {\n        drawable: props.drawable\n      };\n      options.selectedIcon = undefined;\n    }\n    if (props.selectedColor) {\n      options.selectedIconColor = props.selectedColor;\n    }\n  }\n  function convertIconSrcToIconOption(icon) {\n    if (icon && icon.src) {\n      const {\n        defaultIcon,\n        selected\n      } = typeof icon.src === 'object' && 'selected' in icon.src ? {\n        defaultIcon: icon.src.default,\n        selected: icon.src.selected\n      } : {\n        defaultIcon: icon.src\n      };\n      const options = {};\n      options.icon = convertSrcOrComponentToSrc(defaultIcon);\n      options.selectedIcon = convertSrcOrComponentToSrc(selected);\n      return options;\n    }\n    return undefined;\n  }\n  function convertSrcOrComponentToSrc(src) {\n    if (src) {\n      if ((0, react_1.isValidElement)(src)) {\n        if (src.type === elements_1.VectorIcon) {\n          const props = src.props;\n          return {\n            src: props.family.getImageSource(props.name, 24, 'white')\n          };\n        } else {\n          console.warn('Only VectorIcon is supported as a React element in Icon.src');\n        }\n      } else {\n        return {\n          src\n        };\n      }\n    }\n    return undefined;\n  }\n  function appendTabBarOptions(options, props) {\n    const {\n      backgroundColor,\n      blurEffect,\n      iconColor,\n      disableTransparentOnScrollEdge,\n      badgeBackgroundColor,\n      badgeTextColor,\n      indicatorColor,\n      labelStyle,\n      shadowColor\n    } = props;\n    if (backgroundColor) {\n      options.backgroundColor = backgroundColor;\n    }\n    // We need better native integration of this on Android\n    // Simulating from JS side creates ugly transitions\n    if (true) {\n      if (blurEffect) {\n        options.blurEffect = blurEffect;\n      }\n      if (shadowColor) {\n        options.shadowColor = shadowColor;\n      }\n      if (iconColor) {\n        options.iconColor = iconColor;\n      }\n      if (disableTransparentOnScrollEdge !== undefined) {\n        options.disableTransparentOnScrollEdge = disableTransparentOnScrollEdge;\n      }\n      if (badgeBackgroundColor) {\n        options.badgeBackgroundColor = badgeBackgroundColor;\n      }\n      if (badgeTextColor) {\n        options.badgeTextColor = badgeTextColor;\n      }\n      if (indicatorColor) {\n        options.indicatorColor = indicatorColor;\n      }\n      if (labelStyle) {\n        options.labelStyle = labelStyle;\n      }\n    }\n  }\n  function isNativeTabTrigger(child, contextKey) {\n    if ((0, react_1.isValidElement)(child) && child && child.type === exports.NativeTabTrigger) {\n      if (typeof child.props === 'object' && child.props && 'name' in child.props && !child.props.name) {\n        throw new Error(`<Trigger /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`);\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (['component', 'getComponent'].some(key => child.props && typeof child.props === 'object' && key in child.props)) {\n          throw new Error(`<Trigger /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`component\\` or \\`getComponent\\` prop when used as a child of a Layout Route`);\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n});","lineCount":264,"map":[[2,2,1,0],[2,14,1,12],[3,2,2,0],[3,14,2,12],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,3,47,"value"],[6,9,3,52],[6,11,3,54],[7,2,3,59],[7,3,3,60],[7,4,3,61],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"NativeTabTrigger"],[8,26,4,24],[8,29,4,27],[8,34,4,32],[8,35,4,33],[9,2,5,0,"exports"],[9,9,5,7],[9,10,5,8,"convertTabPropsToOptions"],[9,34,5,32],[9,37,5,35,"convertTabPropsToOptions"],[9,61,5,59],[10,2,6,0,"exports"],[10,9,6,7],[10,10,6,8,"appendIconOptions"],[10,27,6,25],[10,30,6,28,"appendIconOptions"],[10,47,6,45],[11,2,7,0,"exports"],[11,9,7,7],[11,10,7,8,"isNativeTabTrigger"],[11,28,7,26],[11,31,7,29,"isNativeTabTrigger"],[11,49,7,47],[12,2,8,0],[12,8,8,6,"native_1"],[12,16,8,14],[12,19,8,17,"require"],[12,26,8,24],[12,27,8,24,"_dependencyMap"],[12,41,8,24],[12,72,8,51],[12,73,8,52],[13,2,9,0],[13,8,9,6,"react_1"],[13,15,9,13],[13,18,9,16,"require"],[13,25,9,23],[13,26,9,23,"_dependencyMap"],[13,40,9,23],[13,52,9,31],[13,53,9,32],[14,2,10,0],[14,8,10,6,"NativeTabsTriggerTabBar_1"],[14,33,10,31],[14,36,10,34,"require"],[14,43,10,41],[14,44,10,41,"_dependencyMap"],[14,58,10,41],[14,90,10,69],[14,91,10,70],[15,2,11,0],[15,8,11,6,"utils_1"],[15,15,11,13],[15,18,11,16,"require"],[15,25,11,23],[15,26,11,23,"_dependencyMap"],[15,40,11,23],[15,54,11,33],[15,55,11,34],[16,2,12,0],[16,8,12,6,"PreviewRouteContext_1"],[16,29,12,27],[16,32,12,30,"require"],[16,39,12,37],[16,40,12,37,"_dependencyMap"],[16,54,12,37],[16,99,12,78],[16,100,12,79],[17,2,13,0],[17,8,13,6,"useSafeLayoutEffect_1"],[17,29,13,27],[17,32,13,30,"require"],[17,39,13,37],[17,40,13,37,"_dependencyMap"],[17,54,13,37],[17,92,13,71],[17,93,13,72],[18,2,14,0],[18,8,14,6,"elements_1"],[18,18,14,16],[18,21,14,19,"require"],[18,28,14,26],[18,29,14,26,"_dependencyMap"],[18,43,14,26],[18,68,14,47],[18,69,14,48],[19,2,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,0,33,0],[38,0,34,0],[39,0,35,0],[40,0,36,0],[41,0,37,0],[42,0,38,0],[43,0,39,0],[44,0,40,0],[45,0,41,0],[46,0,42,0],[47,0,43,0],[48,0,44,0],[49,0,45,0],[50,0,46,0],[51,0,47,0],[52,0,48,0],[53,0,49,0],[54,0,50,0],[55,0,51,0],[56,0,52,0],[57,0,53,0],[58,0,54,0],[59,2,55,0],[59,11,55,9,"NativeTabTriggerImpl"],[59,31,55,29,"NativeTabTriggerImpl"],[59,32,55,30,"props"],[59,37,55,35],[59,39,55,37],[60,4,56,4],[60,10,56,10,"route"],[60,15,56,15],[60,18,56,18],[60,19,56,19],[60,20,56,20],[60,22,56,22,"native_1"],[60,30,56,30],[60,31,56,31,"useRoute"],[60,39,56,39],[60,41,56,41],[60,42,56,42],[61,4,57,4],[61,10,57,10,"navigation"],[61,20,57,20],[61,23,57,23],[61,24,57,24],[61,25,57,25],[61,27,57,27,"native_1"],[61,35,57,35],[61,36,57,36,"useNavigation"],[61,49,57,49],[61,51,57,51],[61,52,57,52],[62,4,58,4],[62,10,58,10,"isFocused"],[62,19,58,19],[62,22,58,22,"navigation"],[62,32,58,32],[62,33,58,33,"isFocused"],[62,42,58,42],[62,43,58,43],[62,44,58,44],[63,4,59,4],[63,10,59,10,"isInPreview"],[63,21,59,21],[63,24,59,24],[63,25,59,25],[63,26,59,26],[63,28,59,28,"PreviewRouteContext_1"],[63,49,59,49],[63,50,59,50,"useIsPreview"],[63,62,59,62],[63,64,59,64],[63,65,59,65],[64,4,60,4],[64,5,60,5],[64,6,60,6],[64,8,60,8,"useSafeLayoutEffect_1"],[64,29,60,29],[64,30,60,30,"useSafeLayoutEffect"],[64,49,60,49],[64,51,60,51],[64,57,60,57],[65,6,61,8],[66,6,62,8],[67,6,63,8],[68,6,64,8],[68,10,64,12,"isFocused"],[68,19,64,21],[68,23,64,25],[68,24,64,26,"isInPreview"],[68,35,64,37],[68,37,64,39],[69,8,65,12],[69,12,65,16,"navigation"],[69,22,65,26],[69,23,65,27,"getState"],[69,31,65,35],[69,32,65,36],[69,33,65,37],[69,35,65,39,"type"],[69,39,65,43],[69,44,65,48],[69,49,65,53],[69,51,65,55],[70,10,66,16],[70,16,66,22],[70,20,66,26,"Error"],[70,25,66,31],[70,26,66,32],[70,98,66,104,"route"],[70,103,66,109],[70,104,66,110,"name"],[70,108,66,114],[70,110,66,116],[70,111,66,117],[71,8,67,12],[72,8,68,12],[72,14,68,18,"options"],[72,21,68,25],[72,24,68,28,"convertTabPropsToOptions"],[72,48,68,52],[72,49,68,53,"props"],[72,54,68,58],[72,56,68,60],[72,60,68,64],[72,61,68,65],[73,8,69,12,"navigation"],[73,18,69,22],[73,19,69,23,"setOptions"],[73,29,69,33],[73,30,69,34,"options"],[73,37,69,41],[73,38,69,42],[74,6,70,8],[75,4,71,4],[75,5,71,5],[75,7,71,7],[75,8,71,8,"isFocused"],[75,17,71,17],[75,19,71,19,"props"],[75,24,71,24],[75,26,71,26,"isInPreview"],[75,37,71,37],[75,38,71,38],[75,39,71,39],[76,4,72,4],[76,11,72,11],[76,15,72,15],[77,2,73,0],[78,2,74,0,"exports"],[78,9,74,7],[78,10,74,8,"NativeTabTrigger"],[78,26,74,24],[78,29,74,27,"Object"],[78,35,74,33],[78,36,74,34,"assign"],[78,42,74,40],[78,43,74,41,"NativeTabTriggerImpl"],[78,63,74,61],[78,65,74,63],[79,4,75,4,"TabBar"],[79,10,75,10],[79,12,75,12,"NativeTabsTriggerTabBar_1"],[79,37,75,37],[79,38,75,38,"NativeTabsTriggerTabBar"],[80,2,76,0],[80,3,76,1],[80,4,76,2],[81,2,77,0],[81,11,77,9,"convertTabPropsToOptions"],[81,35,77,33,"convertTabPropsToOptions"],[81,36,77,34],[82,4,77,36,"options"],[82,11,77,43],[83,4,77,45,"hidden"],[83,10,77,51],[84,4,77,53,"children"],[84,12,77,61],[85,4,77,63,"role"],[85,8,77,67],[86,4,77,69,"disablePopToTop"],[86,19,77,84],[87,4,77,86,"disableScrollToTop"],[88,2,77,105],[88,3,77,106],[88,5,77,108,"isDynamic"],[88,14,77,117],[88,17,77,120],[88,22,77,125],[88,24,77,127],[89,4,78,4],[89,10,78,10,"initialOptions"],[89,24,78,24],[89,27,78,27,"isDynamic"],[89,36,78,36],[89,39,78,36,"Object"],[89,45,78,36],[89,46,78,36,"assign"],[89,52,78,36],[89,57,79,15,"options"],[89,64,79,22],[89,68,79,22,"Object"],[89,74,79,22],[89,75,79,22,"assign"],[89,81,79,22],[89,86,81,15,"options"],[89,93,81,22],[90,6,82,12,"hidden"],[90,12,82,18],[90,14,82,20],[90,15,82,21],[90,16,82,22,"hidden"],[90,22,82,28],[91,6,83,12,"specialEffects"],[91,20,83,26],[91,22,83,28],[92,8,84,16,"repeatedTabSelection"],[92,28,84,36],[92,30,84,38],[93,10,85,20,"popToRoot"],[93,19,85,29],[93,21,85,31],[93,22,85,32,"disablePopToTop"],[93,37,85,47],[94,10,86,20,"scrollToTop"],[94,21,86,31],[94,23,86,33],[94,24,86,34,"disableScrollToTop"],[95,8,87,16],[96,6,88,12],[96,7,88,13],[97,6,89,12,"role"],[97,10,89,16],[97,12,89,18,"role"],[97,16,89,22],[97,20,89,26,"options"],[97,27,89,33],[97,29,89,35,"role"],[98,4,89,39],[98,6,90,9],[99,4,91,4],[99,10,91,10,"allowedChildren"],[99,25,91,25],[99,28,91,28],[99,29,91,29],[99,30,91,30],[99,32,91,32,"utils_1"],[99,39,91,39],[99,40,91,40,"filterAllowedChildrenElements"],[99,69,91,69],[99,71,91,71,"children"],[99,79,91,79],[99,81,91,81],[99,82,92,8,"elements_1"],[99,92,92,18],[99,93,92,19,"Badge"],[99,98,92,24],[99,100,93,8,"elements_1"],[99,110,93,18],[99,111,93,19,"Label"],[99,116,93,24],[99,118,94,8,"elements_1"],[99,128,94,18],[99,129,94,19,"Icon"],[99,133,94,23],[99,135,95,8,"NativeTabsTriggerTabBar_1"],[99,160,95,33],[99,161,95,34,"NativeTabsTriggerTabBar"],[99,184,95,57],[99,185,96,5],[99,186,96,6],[100,4,97,4],[100,11,97,11,"allowedChildren"],[100,26,97,26],[100,27,97,27,"reduce"],[100,33,97,33],[100,34,97,34],[100,35,97,35,"acc"],[100,38,97,38],[100,40,97,40,"child"],[100,45,97,45],[100,50,97,50],[101,6,98,8],[101,10,98,12],[101,11,98,13],[101,12,98,14],[101,14,98,16,"utils_1"],[101,21,98,23],[101,22,98,24,"isChildOfType"],[101,35,98,37],[101,37,98,39,"child"],[101,42,98,44],[101,44,98,46,"elements_1"],[101,54,98,56],[101,55,98,57,"Badge"],[101,60,98,62],[101,61,98,63],[101,63,98,65],[102,8,99,12,"appendBadgeOptions"],[102,26,99,30],[102,27,99,31,"acc"],[102,30,99,34],[102,32,99,36,"child"],[102,37,99,41],[102,38,99,42,"props"],[102,43,99,47],[102,44,99,48],[103,6,100,8],[103,7,100,9],[103,13,101,13],[103,17,101,17],[103,18,101,18],[103,19,101,19],[103,21,101,21,"utils_1"],[103,28,101,28],[103,29,101,29,"isChildOfType"],[103,42,101,42],[103,44,101,44,"child"],[103,49,101,49],[103,51,101,51,"elements_1"],[103,61,101,61],[103,62,101,62,"Label"],[103,67,101,67],[103,68,101,68],[103,70,101,70],[104,8,102,12,"appendLabelOptions"],[104,26,102,30],[104,27,102,31,"acc"],[104,30,102,34],[104,32,102,36,"child"],[104,37,102,41],[104,38,102,42,"props"],[104,43,102,47],[104,44,102,48],[105,6,103,8],[105,7,103,9],[105,13,104,13],[105,17,104,17],[105,18,104,18],[105,19,104,19],[105,21,104,21,"utils_1"],[105,28,104,28],[105,29,104,29,"isChildOfType"],[105,42,104,42],[105,44,104,44,"child"],[105,49,104,49],[105,51,104,51,"elements_1"],[105,61,104,61],[105,62,104,62,"Icon"],[105,66,104,66],[105,67,104,67],[105,69,104,69],[106,8,105,12,"appendIconOptions"],[106,25,105,29],[106,26,105,30,"acc"],[106,29,105,33],[106,31,105,35,"child"],[106,36,105,40],[106,37,105,41,"props"],[106,42,105,46],[106,43,105,47],[107,6,106,8],[107,7,106,9],[107,13,107,13],[107,17,107,17],[107,18,107,18],[107,19,107,19],[107,21,107,21,"utils_1"],[107,28,107,28],[107,29,107,29,"isChildOfType"],[107,42,107,42],[107,44,107,44,"child"],[107,49,107,49],[107,51,107,51,"NativeTabsTriggerTabBar_1"],[107,76,107,76],[107,77,107,77,"NativeTabsTriggerTabBar"],[107,100,107,100],[107,101,107,101],[107,103,107,103],[108,8,108,12,"appendTabBarOptions"],[108,27,108,31],[108,28,108,32,"acc"],[108,31,108,35],[108,33,108,37,"child"],[108,38,108,42],[108,39,108,43,"props"],[108,44,108,48],[108,45,108,49],[109,6,109,8],[110,6,110,8],[110,13,110,15,"acc"],[110,16,110,18],[111,4,111,4],[111,5,111,5],[111,7,111,5,"Object"],[111,13,111,5],[111,14,111,5,"assign"],[111,20,111,5],[111,25,111,12,"initialOptions"],[111,39,111,26],[111,40,111,28],[111,41,111,29],[112,2,112,0],[113,2,113,0],[113,11,113,9,"appendBadgeOptions"],[113,29,113,27,"appendBadgeOptions"],[113,30,113,28,"options"],[113,37,113,35],[113,39,113,37,"props"],[113,44,113,42],[113,46,113,44],[114,4,114,4],[114,8,114,8,"props"],[114,13,114,13],[114,14,114,14,"children"],[114,22,114,22],[114,24,114,24],[115,6,115,8,"options"],[115,13,115,15],[115,14,115,16,"badgeValue"],[115,24,115,26],[115,27,115,29,"String"],[115,33,115,35],[115,34,115,36,"props"],[115,39,115,41],[115,40,115,42,"children"],[115,48,115,50],[115,49,115,51],[116,6,116,8,"options"],[116,13,116,15],[116,14,116,16,"selectedBadgeBackgroundColor"],[116,42,116,44],[116,45,116,47,"props"],[116,50,116,52],[116,51,116,53,"selectedBackgroundColor"],[116,74,116,76],[117,4,117,4],[117,5,117,5],[117,11,118,9],[117,15,118,13],[117,16,118,14,"props"],[117,21,118,19],[117,22,118,20,"hidden"],[117,28,118,26],[117,30,118,28],[118,6,119,8],[119,6,120,8],[120,6,121,8],[121,6,122,8,"options"],[121,13,122,15],[121,14,122,16,"badgeValue"],[121,24,122,26],[121,27,122,29],[121,30,122,32],[122,4,123,4],[123,2,124,0],[124,2,125,0],[124,11,125,9,"appendLabelOptions"],[124,29,125,27,"appendLabelOptions"],[124,30,125,28,"options"],[124,37,125,35],[124,39,125,37,"props"],[124,44,125,42],[124,46,125,44],[125,4,126,4],[125,8,126,8,"props"],[125,13,126,13],[125,14,126,14,"hidden"],[125,20,126,20],[125,22,126,22],[126,6,127,8,"options"],[126,13,127,15],[126,14,127,16,"title"],[126,19,127,21],[126,22,127,24],[126,24,127,26],[127,4,128,4],[127,5,128,5],[127,11,129,9],[128,6,130,8,"options"],[128,13,130,15],[128,14,130,16,"title"],[128,19,130,21],[128,22,130,24,"props"],[128,27,130,29],[128,28,130,30,"children"],[128,36,130,38],[129,6,131,8],[129,10,131,12,"props"],[129,15,131,17],[129,16,131,18,"selectedStyle"],[129,29,131,31],[129,31,131,33],[130,8,132,12,"options"],[130,15,132,19],[130,16,132,20,"selectedLabelStyle"],[130,34,132,38],[130,37,132,41,"props"],[130,42,132,46],[130,43,132,47,"selectedStyle"],[130,56,132,60],[131,6,133,8],[132,4,134,4],[133,2,135,0],[134,2,136,0],[134,11,136,9,"appendIconOptions"],[134,28,136,26,"appendIconOptions"],[134,29,136,27,"options"],[134,36,136,34],[134,38,136,36,"props"],[134,43,136,41],[134,45,136,43],[135,4,137,4],[135,8,137,8],[135,13,137,13],[135,17,137,17,"props"],[135,22,137,22],[135,26,137,26,"props"],[135,31,137,31],[135,32,137,32,"src"],[135,35,137,35],[135,37,137,37],[136,6,138,8],[136,12,138,14,"icon"],[136,16,138,18],[136,19,138,21,"convertIconSrcToIconOption"],[136,45,138,47],[136,46,138,48,"props"],[136,51,138,53],[136,52,138,54],[137,6,139,8,"options"],[137,13,139,15],[137,14,139,16,"icon"],[137,18,139,20],[137,21,139,23,"icon"],[137,25,139,27],[137,27,139,29,"icon"],[137,31,139,33],[138,6,140,8,"options"],[138,13,140,15],[138,14,140,16,"selectedIcon"],[138,26,140,28],[138,29,140,31,"icon"],[138,33,140,35],[138,35,140,37,"selectedIcon"],[138,47,140,49],[139,4,141,4],[139,5,141,5],[139,11,142,9],[139,15,142,13],[139,19,142,17],[139,23,142,21,"props"],[139,28,142,26],[139,37,142,59],[139,39,142,61],[140,6,143,8],[140,10,143,12],[140,17,143,19,"props"],[140,22,143,24],[140,23,143,25,"sf"],[140,25,143,27],[140,30,143,32],[140,38,143,40],[140,40,143,42],[141,8,144,12,"options"],[141,15,144,19],[141,16,144,20,"icon"],[141,20,144,24],[141,23,144,27,"props"],[141,28,144,32],[141,29,144,33,"sf"],[141,31,144,35],[141,34,145,18],[142,10,146,20,"sf"],[142,12,146,22],[142,14,146,24,"props"],[142,19,146,29],[142,20,146,30,"sf"],[143,8,147,16],[143,9,147,17],[143,12,148,18,"undefined"],[143,21,148,27],[144,8,149,12,"options"],[144,15,149,19],[144,16,149,20,"selectedIcon"],[144,28,149,32],[144,31,149,35,"undefined"],[144,40,149,44],[145,6,150,8],[145,7,150,9],[145,13,151,13],[145,17,151,17,"props"],[145,22,151,22],[145,23,151,23,"sf"],[145,25,151,25],[145,27,151,27],[146,8,152,12,"options"],[146,15,152,19],[146,16,152,20,"icon"],[146,20,152,24],[146,23,152,27,"props"],[146,28,152,32],[146,29,152,33,"sf"],[146,31,152,35],[146,32,152,36,"default"],[146,39,152,43],[146,42,153,18],[147,10,154,20,"sf"],[147,12,154,22],[147,14,154,24,"props"],[147,19,154,29],[147,20,154,30,"sf"],[147,22,154,32],[147,23,154,33,"default"],[148,8,155,16],[148,9,155,17],[148,12,156,18,"undefined"],[148,21,156,27],[149,8,157,12,"options"],[149,15,157,19],[149,16,157,20,"selectedIcon"],[149,28,157,32],[149,31,157,35,"props"],[149,36,157,40],[149,37,157,41,"sf"],[149,39,157,43],[149,40,157,44,"selected"],[149,48,157,52],[149,51,158,18],[150,10,159,20,"sf"],[150,12,159,22],[150,14,159,24,"props"],[150,19,159,29],[150,20,159,30,"sf"],[150,22,159,32],[150,23,159,33,"selected"],[151,8,160,16],[151,9,160,17],[151,12,161,18,"undefined"],[151,21,161,27],[152,6,162,8],[153,4,163,4],[153,5,163,5],[153,11,164,9],[153,15,164,13],[153,27,164,25],[153,31,164,29,"props"],[153,36,164,34],[153,45,164,71],[153,47,164,73],[154,6,165,8],[154,12,165,14,"icon"],[154,16,165,18],[154,19,165,21,"convertIconSrcToIconOption"],[154,45,165,47],[154,46,165,48],[155,8,165,50,"src"],[155,11,165,53],[155,13,165,55,"props"],[155,18,165,60],[155,19,165,61,"androidSrc"],[156,6,165,72],[156,7,165,73],[156,8,165,74],[157,6,166,8,"options"],[157,13,166,15],[157,14,166,16,"icon"],[157,18,166,20],[157,21,166,23,"icon"],[157,25,166,27],[157,27,166,29,"icon"],[157,31,166,33],[158,6,167,8,"options"],[158,13,167,15],[158,14,167,16,"selectedIcon"],[158,26,167,28],[158,29,167,31,"icon"],[158,33,167,35],[158,35,167,37,"selectedIcon"],[158,47,167,49],[159,4,168,4],[159,5,168,5],[159,11,169,9],[159,15,169,13],[159,25,169,23],[159,29,169,27,"props"],[159,34,169,32],[159,43,169,69],[159,45,169,71],[160,6,170,8,"options"],[160,13,170,15],[160,14,170,16,"icon"],[160,18,170,20],[160,21,170,23],[161,8,170,25,"drawable"],[161,16,170,33],[161,18,170,35,"props"],[161,23,170,40],[161,24,170,41,"drawable"],[162,6,170,50],[162,7,170,51],[163,6,171,8,"options"],[163,13,171,15],[163,14,171,16,"selectedIcon"],[163,26,171,28],[163,29,171,31,"undefined"],[163,38,171,40],[164,4,172,4],[165,4,173,4],[165,8,173,8,"props"],[165,13,173,13],[165,14,173,14,"selectedColor"],[165,27,173,27],[165,29,173,29],[166,6,174,8,"options"],[166,13,174,15],[166,14,174,16,"selectedIconColor"],[166,31,174,33],[166,34,174,36,"props"],[166,39,174,41],[166,40,174,42,"selectedColor"],[166,53,174,55],[167,4,175,4],[168,2,176,0],[169,2,177,0],[169,11,177,9,"convertIconSrcToIconOption"],[169,37,177,35,"convertIconSrcToIconOption"],[169,38,177,36,"icon"],[169,42,177,40],[169,44,177,42],[170,4,178,4],[170,8,178,8,"icon"],[170,12,178,12],[170,16,178,16,"icon"],[170,20,178,20],[170,21,178,21,"src"],[170,24,178,24],[170,26,178,26],[171,6,179,8],[171,12,179,14],[172,8,179,16,"defaultIcon"],[172,19,179,27],[173,8,179,29,"selected"],[174,6,179,38],[174,7,179,39],[174,10,179,42],[174,17,179,49,"icon"],[174,21,179,53],[174,22,179,54,"src"],[174,25,179,57],[174,30,179,62],[174,38,179,70],[174,42,179,74],[174,52,179,84],[174,56,179,88,"icon"],[174,60,179,92],[174,61,179,93,"src"],[174,64,179,96],[174,67,180,14],[175,8,180,16,"defaultIcon"],[175,19,180,27],[175,21,180,29,"icon"],[175,25,180,33],[175,26,180,34,"src"],[175,29,180,37],[175,30,180,38,"default"],[175,37,180,45],[176,8,180,47,"selected"],[176,16,180,55],[176,18,180,57,"icon"],[176,22,180,61],[176,23,180,62,"src"],[176,26,180,65],[176,27,180,66,"selected"],[177,6,180,75],[177,7,180,76],[177,10,181,14],[178,8,181,16,"defaultIcon"],[178,19,181,27],[178,21,181,29,"icon"],[178,25,181,33],[178,26,181,34,"src"],[179,6,181,38],[179,7,181,39],[180,6,182,8],[180,12,182,14,"options"],[180,19,182,21],[180,22,182,24],[180,23,182,25],[180,24,182,26],[181,6,183,8,"options"],[181,13,183,15],[181,14,183,16,"icon"],[181,18,183,20],[181,21,183,23,"convertSrcOrComponentToSrc"],[181,47,183,49],[181,48,183,50,"defaultIcon"],[181,59,183,61],[181,60,183,62],[182,6,184,8,"options"],[182,13,184,15],[182,14,184,16,"selectedIcon"],[182,26,184,28],[182,29,184,31,"convertSrcOrComponentToSrc"],[182,55,184,57],[182,56,184,58,"selected"],[182,64,184,66],[182,65,184,67],[183,6,185,8],[183,13,185,15,"options"],[183,20,185,22],[184,4,186,4],[185,4,187,4],[185,11,187,11,"undefined"],[185,20,187,20],[186,2,188,0],[187,2,189,0],[187,11,189,9,"convertSrcOrComponentToSrc"],[187,37,189,35,"convertSrcOrComponentToSrc"],[187,38,189,36,"src"],[187,41,189,39],[187,43,189,41],[188,4,190,4],[188,8,190,8,"src"],[188,11,190,11],[188,13,190,13],[189,6,191,8],[189,10,191,12],[189,11,191,13],[189,12,191,14],[189,14,191,16,"react_1"],[189,21,191,23],[189,22,191,24,"isValidElement"],[189,36,191,38],[189,38,191,40,"src"],[189,41,191,43],[189,42,191,44],[189,44,191,46],[190,8,192,12],[190,12,192,16,"src"],[190,15,192,19],[190,16,192,20,"type"],[190,20,192,24],[190,25,192,29,"elements_1"],[190,35,192,39],[190,36,192,40,"VectorIcon"],[190,46,192,50],[190,48,192,52],[191,10,193,16],[191,16,193,22,"props"],[191,21,193,27],[191,24,193,30,"src"],[191,27,193,33],[191,28,193,34,"props"],[191,33,193,39],[192,10,194,16],[192,17,194,23],[193,12,194,25,"src"],[193,15,194,28],[193,17,194,30,"props"],[193,22,194,35],[193,23,194,36,"family"],[193,29,194,42],[193,30,194,43,"getImageSource"],[193,44,194,57],[193,45,194,58,"props"],[193,50,194,63],[193,51,194,64,"name"],[193,55,194,68],[193,57,194,70],[193,59,194,72],[193,61,194,74],[193,68,194,81],[194,10,194,83],[194,11,194,84],[195,8,195,12],[195,9,195,13],[195,15,196,17],[196,10,197,16,"console"],[196,17,197,23],[196,18,197,24,"warn"],[196,22,197,28],[196,23,197,29],[196,84,197,90],[196,85,197,91],[197,8,198,12],[198,6,199,8],[198,7,199,9],[198,13,200,13],[199,8,201,12],[199,15,201,19],[200,10,201,21,"src"],[201,8,201,25],[201,9,201,26],[202,6,202,8],[203,4,203,4],[204,4,204,4],[204,11,204,11,"undefined"],[204,20,204,20],[205,2,205,0],[206,2,206,0],[206,11,206,9,"appendTabBarOptions"],[206,30,206,28,"appendTabBarOptions"],[206,31,206,29,"options"],[206,38,206,36],[206,40,206,38,"props"],[206,45,206,43],[206,47,206,45],[207,4,207,4],[207,10,207,10],[208,6,207,12,"backgroundColor"],[208,21,207,27],[209,6,207,29,"blurEffect"],[209,16,207,39],[210,6,207,41,"iconColor"],[210,15,207,50],[211,6,207,52,"disableTransparentOnScrollEdge"],[211,36,207,82],[212,6,207,84,"badgeBackgroundColor"],[212,26,207,104],[213,6,207,106,"badgeTextColor"],[213,20,207,120],[214,6,207,122,"indicatorColor"],[214,20,207,136],[215,6,207,138,"labelStyle"],[215,16,207,148],[216,6,207,150,"shadowColor"],[217,4,207,163],[217,5,207,164],[217,8,207,167,"props"],[217,13,207,172],[218,4,208,4],[218,8,208,8,"backgroundColor"],[218,23,208,23],[218,25,208,25],[219,6,209,8,"options"],[219,13,209,15],[219,14,209,16,"backgroundColor"],[219,29,209,31],[219,32,209,34,"backgroundColor"],[219,47,209,49],[220,4,210,4],[221,4,211,4],[222,4,212,4],[223,4,213,4],[223,14,213,43],[224,6,214,8],[224,10,214,12,"blurEffect"],[224,20,214,22],[224,22,214,24],[225,8,215,12,"options"],[225,15,215,19],[225,16,215,20,"blurEffect"],[225,26,215,30],[225,29,215,33,"blurEffect"],[225,39,215,43],[226,6,216,8],[227,6,217,8],[227,10,217,12,"shadowColor"],[227,21,217,23],[227,23,217,25],[228,8,218,12,"options"],[228,15,218,19],[228,16,218,20,"shadowColor"],[228,27,218,31],[228,30,218,34,"shadowColor"],[228,41,218,45],[229,6,219,8],[230,6,220,8],[230,10,220,12,"iconColor"],[230,19,220,21],[230,21,220,23],[231,8,221,12,"options"],[231,15,221,19],[231,16,221,20,"iconColor"],[231,25,221,29],[231,28,221,32,"iconColor"],[231,37,221,41],[232,6,222,8],[233,6,223,8],[233,10,223,12,"disableTransparentOnScrollEdge"],[233,40,223,42],[233,45,223,47,"undefined"],[233,54,223,56],[233,56,223,58],[234,8,224,12,"options"],[234,15,224,19],[234,16,224,20,"disableTransparentOnScrollEdge"],[234,46,224,50],[234,49,224,53,"disableTransparentOnScrollEdge"],[234,79,224,83],[235,6,225,8],[236,6,226,8],[236,10,226,12,"badgeBackgroundColor"],[236,30,226,32],[236,32,226,34],[237,8,227,12,"options"],[237,15,227,19],[237,16,227,20,"badgeBackgroundColor"],[237,36,227,40],[237,39,227,43,"badgeBackgroundColor"],[237,59,227,63],[238,6,228,8],[239,6,229,8],[239,10,229,12,"badgeTextColor"],[239,24,229,26],[239,26,229,28],[240,8,230,12,"options"],[240,15,230,19],[240,16,230,20,"badgeTextColor"],[240,30,230,34],[240,33,230,37,"badgeTextColor"],[240,47,230,51],[241,6,231,8],[242,6,232,8],[242,10,232,12,"indicatorColor"],[242,24,232,26],[242,26,232,28],[243,8,233,12,"options"],[243,15,233,19],[243,16,233,20,"indicatorColor"],[243,30,233,34],[243,33,233,37,"indicatorColor"],[243,47,233,51],[244,6,234,8],[245,6,235,8],[245,10,235,12,"labelStyle"],[245,20,235,22],[245,22,235,24],[246,8,236,12,"options"],[246,15,236,19],[246,16,236,20,"labelStyle"],[246,26,236,30],[246,29,236,33,"labelStyle"],[246,39,236,43],[247,6,237,8],[248,4,238,4],[249,2,239,0],[250,2,240,0],[250,11,240,9,"isNativeTabTrigger"],[250,29,240,27,"isNativeTabTrigger"],[250,30,240,28,"child"],[250,35,240,33],[250,37,240,35,"contextKey"],[250,47,240,45],[250,49,240,47],[251,4,241,4],[251,8,241,8],[251,9,241,9],[251,10,241,10],[251,12,241,12,"react_1"],[251,19,241,19],[251,20,241,20,"isValidElement"],[251,34,241,34],[251,36,241,36,"child"],[251,41,241,41],[251,42,241,42],[251,46,241,46,"child"],[251,51,241,51],[251,55,241,55,"child"],[251,60,241,60],[251,61,241,61,"type"],[251,65,241,65],[251,70,241,70,"exports"],[251,77,241,77],[251,78,241,78,"NativeTabTrigger"],[251,94,241,94],[251,96,241,96],[252,6,242,8],[252,10,242,12],[252,17,242,19,"child"],[252,22,242,24],[252,23,242,25,"props"],[252,28,242,30],[252,33,242,35],[252,41,242,43],[252,45,243,12,"child"],[252,50,243,17],[252,51,243,18,"props"],[252,56,243,23],[252,60,244,12],[252,66,244,18],[252,70,244,22,"child"],[252,75,244,27],[252,76,244,28,"props"],[252,81,244,33],[252,85,245,12],[252,86,245,13,"child"],[252,91,245,18],[252,92,245,19,"props"],[252,97,245,24],[252,98,245,25,"name"],[252,102,245,29],[252,104,245,31],[253,8,246,12],[253,14,246,18],[253,18,246,22,"Error"],[253,23,246,27],[253,24,246,28],[253,79,246,83,"contextKey"],[253,89,246,93],[253,167,246,171],[253,168,246,172],[254,6,247,8],[255,6,248,8],[255,10,248,12,"process"],[255,17,248,19],[255,18,248,20,"env"],[255,21,248,23],[255,22,248,24,"NODE_ENV"],[255,30,248,32],[255,35,248,37],[255,47,248,49],[255,49,248,51],[256,8,249,12],[256,12,249,16],[256,13,249,17],[256,24,249,28],[256,26,249,30],[256,40,249,44],[256,41,249,45],[256,42,249,46,"some"],[256,46,249,50],[256,47,249,52,"key"],[256,50,249,55],[256,54,249,60,"child"],[256,59,249,65],[256,60,249,66,"props"],[256,65,249,71],[256,69,249,75],[256,76,249,82,"child"],[256,81,249,87],[256,82,249,88,"props"],[256,87,249,93],[256,92,249,98],[256,100,249,106],[256,104,249,110,"key"],[256,107,249,113],[256,111,249,117,"child"],[256,116,249,122],[256,117,249,123,"props"],[256,122,249,128],[256,123,249,129],[256,125,249,131],[257,10,250,16],[257,16,250,22],[257,20,250,26,"Error"],[257,25,250,31],[257,26,250,32],[257,81,250,87,"contextKey"],[257,91,250,97],[257,197,250,203],[257,198,250,204],[258,8,251,12],[259,6,252,8],[260,6,253,8],[260,13,253,15],[260,17,253,19],[261,4,254,4],[262,4,255,4],[262,11,255,11],[262,16,255,16],[263,2,256,0],[264,0,256,1],[264,3]],"functionMap":{"names":["<global>","NativeTabTriggerImpl","<anonymous>","convertTabPropsToOptions","allowedChildren.reduce$argument_0","appendBadgeOptions","appendLabelOptions","appendIconOptions","convertIconSrcToIconOption","convertSrcOrComponentToSrc","appendTabBarOptions","isNativeTabTrigger","some$argument_0"],"mappings":"AAA;ACsD;mDCK;KDW;CDE;AGI;kCCoB;KDc;CHC;AKC;CLW;AMC;CNU;AOC;CPwC;AQC;CRW;ASC;CTgB;AUC;CViC;AWC;mDCS,6ED;CXO"},"hasCjsExports":true},"type":"js/module"}]}