{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"],"imports":1}},{"name":"./thenable.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":20},"end":{"line":2,"column":47,"index":67}}],"key":"kKA5IQ5mf6XoWFagMsmQasyMyhE=","exportNames":["*"],"imports":1}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":68},"end":{"line":3,"column":34,"index":102}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _excluded = [\"state\"],\n    _excluded2 = [\"fetchStatus\"]; // src/hydration.ts\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"defaultShouldDehydrateMutation\", {\n    enumerable: true,\n    get: function () {\n      return defaultShouldDehydrateMutation;\n    }\n  });\n  Object.defineProperty(exports, \"defaultShouldDehydrateQuery\", {\n    enumerable: true,\n    get: function () {\n      return defaultShouldDehydrateQuery;\n    }\n  });\n  Object.defineProperty(exports, \"dehydrate\", {\n    enumerable: true,\n    get: function () {\n      return dehydrate;\n    }\n  });\n  Object.defineProperty(exports, \"hydrate\", {\n    enumerable: true,\n    get: function () {\n      return hydrate;\n    }\n  });\n  var _babelRuntimeHelpersObjectWithoutProperties = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutProperties\");\n  var _objectWithoutProperties = _interopDefault(_babelRuntimeHelpersObjectWithoutProperties);\n  var _thenableJs = require(_dependencyMap[1], \"./thenable.js\");\n  var _utilsJs = require(_dependencyMap[2], \"./utils.js\");\n  function defaultTransformerFn(data) {\n    return data;\n  }\n  function dehydrateMutation(mutation) {\n    return {\n      mutationKey: mutation.options.mutationKey,\n      state: mutation.state,\n      ...(mutation.options.scope && {\n        scope: mutation.options.scope\n      }),\n      ...(mutation.meta && {\n        meta: mutation.meta\n      })\n    };\n  }\n  function dehydrateQuery(query, serializeData, shouldRedactErrors) {\n    var promise = query.promise?.then(serializeData).catch(error => {\n      if (!shouldRedactErrors(error)) {\n        return Promise.reject(error);\n      }\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(`A query that was dehydrated as pending ended up rejecting. [${query.queryHash}]: ${error}; The error will be redacted in production builds`);\n      }\n      return Promise.reject(new Error(\"redacted\"));\n    });\n    promise?.catch(_utilsJs.noop);\n    return {\n      dehydratedAt: Date.now(),\n      state: {\n        ...query.state,\n        ...(query.state.data !== void 0 && {\n          data: serializeData(query.state.data)\n        })\n      },\n      queryKey: query.queryKey,\n      queryHash: query.queryHash,\n      ...(query.state.status === \"pending\" && {\n        promise\n      }),\n      ...(query.meta && {\n        meta: query.meta\n      })\n    };\n  }\n  function defaultShouldDehydrateMutation(mutation) {\n    return mutation.state.isPaused;\n  }\n  function defaultShouldDehydrateQuery(query) {\n    return query.state.status === \"success\";\n  }\n  function defaultShouldRedactErrors(_) {\n    return true;\n  }\n  function dehydrate(client) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var filterMutation = options.shouldDehydrateMutation ?? client.getDefaultOptions().dehydrate?.shouldDehydrateMutation ?? defaultShouldDehydrateMutation;\n    var mutations = client.getMutationCache().getAll().flatMap(mutation => filterMutation(mutation) ? [dehydrateMutation(mutation)] : []);\n    var filterQuery = options.shouldDehydrateQuery ?? client.getDefaultOptions().dehydrate?.shouldDehydrateQuery ?? defaultShouldDehydrateQuery;\n    var shouldRedactErrors = options.shouldRedactErrors ?? client.getDefaultOptions().dehydrate?.shouldRedactErrors ?? defaultShouldRedactErrors;\n    var serializeData = options.serializeData ?? client.getDefaultOptions().dehydrate?.serializeData ?? defaultTransformerFn;\n    var queries = client.getQueryCache().getAll().flatMap(query => filterQuery(query) ? [dehydrateQuery(query, serializeData, shouldRedactErrors)] : []);\n    return {\n      mutations,\n      queries\n    };\n  }\n  function hydrate(client, dehydratedState, options) {\n    if (typeof dehydratedState !== \"object\" || dehydratedState === null) {\n      return;\n    }\n    var mutationCache = client.getMutationCache();\n    var queryCache = client.getQueryCache();\n    var deserializeData = options?.defaultOptions?.deserializeData ?? client.getDefaultOptions().hydrate?.deserializeData ?? defaultTransformerFn;\n    var mutations = dehydratedState.mutations || [];\n    var queries = dehydratedState.queries || [];\n    mutations.forEach(_ref => {\n      var state = _ref.state,\n        mutationOptions = (0, _objectWithoutProperties.default)(_ref, _excluded);\n      mutationCache.build(client, {\n        ...client.getDefaultOptions().hydrate?.mutations,\n        ...options?.defaultOptions?.mutations,\n        ...mutationOptions\n      }, state);\n    });\n    queries.forEach(_ref2 => {\n      var queryKey = _ref2.queryKey,\n        state = _ref2.state,\n        queryHash = _ref2.queryHash,\n        meta = _ref2.meta,\n        promise = _ref2.promise,\n        dehydratedAt = _ref2.dehydratedAt;\n      var syncData = promise ? (0, _thenableJs.tryResolveSync)(promise) : void 0;\n      var rawData = state.data === void 0 ? syncData?.data : state.data;\n      var data = rawData === void 0 ? rawData : deserializeData(rawData);\n      var query = queryCache.get(queryHash);\n      var existingQueryIsPending = query?.state.status === \"pending\";\n      var existingQueryIsFetching = query?.state.fetchStatus === \"fetching\";\n      if (query) {\n        var hasNewerSyncData = syncData &&\n        // We only need this undefined check to handle older dehydration\n        // payloads that might not have dehydratedAt\n        dehydratedAt !== void 0 && dehydratedAt > query.state.dataUpdatedAt;\n        if (state.dataUpdatedAt > query.state.dataUpdatedAt || hasNewerSyncData) {\n          var _ignored = state.fetchStatus,\n            serializedState = (0, _objectWithoutProperties.default)(state, _excluded2);\n          query.setState({\n            ...serializedState,\n            data\n          });\n        }\n      } else {\n        query = queryCache.build(client, {\n          ...client.getDefaultOptions().hydrate?.queries,\n          ...options?.defaultOptions?.queries,\n          queryKey,\n          queryHash,\n          meta\n        },\n        // Reset fetch status to idle to avoid\n        // query being stuck in fetching state upon hydration\n        {\n          ...state,\n          data,\n          fetchStatus: \"idle\",\n          status: data !== void 0 ? \"success\" : state.status\n        });\n      }\n      if (promise && !existingQueryIsPending && !existingQueryIsFetching && (\n      // Only hydrate if dehydration is newer than any existing data,\n      // this is always true for new queries\n      dehydratedAt === void 0 || dehydratedAt > query.state.dataUpdatedAt)) {\n        query.fetch(void 0, {\n          // RSC transformed promises are not thenable\n          initialPromise: Promise.resolve(promise).then(deserializeData)\n        }).catch(_utilsJs.noop);\n      }\n    });\n  }\n});","lineCount":180,"map":[[5,34,1,0],[6,2,1,0,"Object"],[6,8,1,0],[6,9,1,0,"defineProperty"],[6,23,1,0],[6,24,1,0,"exports"],[6,31,1,0],[7,4,1,0,"value"],[7,9,1,0],[8,2,1,0],[9,2,1,0],[9,11,1,0,"_interopDefault"],[9,27,1,0,"e"],[9,28,1,0],[10,4,1,0],[10,11,1,0,"e"],[10,12,1,0],[10,16,1,0,"e"],[10,17,1,0],[10,18,1,0,"__esModule"],[10,28,1,0],[10,31,1,0,"e"],[10,32,1,0],[11,6,1,0,"default"],[11,13,1,0],[11,15,1,0,"e"],[12,4,1,0],[13,2,1,0],[14,2,136,0,"Object"],[14,8,136,0],[14,9,136,0,"defineProperty"],[14,23,136,0],[14,24,136,0,"exports"],[14,31,136,0],[15,4,136,0,"enumerable"],[15,14,136,0],[16,4,136,0,"get"],[16,7,136,0],[16,18,136,0,"get"],[16,19,136,0],[17,6,136,0],[17,13,137,2,"defaultShouldDehydrateMutation"],[17,43,137,32],[18,4,137,32],[19,2,137,32],[20,2,136,0,"Object"],[20,8,136,0],[20,9,136,0,"defineProperty"],[20,23,136,0],[20,24,136,0,"exports"],[20,31,136,0],[21,4,136,0,"enumerable"],[21,14,136,0],[22,4,136,0,"get"],[22,7,136,0],[22,18,136,0,"get"],[22,19,136,0],[23,6,136,0],[23,13,138,2,"defaultShouldDehydrateQuery"],[23,40,138,29],[24,4,138,29],[25,2,138,29],[26,2,136,0,"Object"],[26,8,136,0],[26,9,136,0,"defineProperty"],[26,23,136,0],[26,24,136,0,"exports"],[26,31,136,0],[27,4,136,0,"enumerable"],[27,14,136,0],[28,4,136,0,"get"],[28,7,136,0],[28,18,136,0,"get"],[28,19,136,0],[29,6,136,0],[29,13,139,2,"dehydrate"],[29,22,139,11],[30,4,139,11],[31,2,139,11],[32,2,136,0,"Object"],[32,8,136,0],[32,9,136,0,"defineProperty"],[32,23,136,0],[32,24,136,0,"exports"],[32,31,136,0],[33,4,136,0,"enumerable"],[33,14,136,0],[34,4,136,0,"get"],[34,7,136,0],[34,18,136,0,"get"],[34,19,136,0],[35,6,136,0],[35,13,140,2,"hydrate"],[35,20,140,9],[36,4,140,9],[37,2,140,9],[38,2,141,2],[38,6,141,2,"_babelRuntimeHelpersObjectWithoutProperties"],[38,49,141,2],[38,52,141,2,"require"],[38,59,141,2],[38,60,141,2,"_dependencyMap"],[38,74,141,2],[39,2,141,2],[39,6,141,2,"_objectWithoutProperties"],[39,30,141,2],[39,33,141,2,"_interopDefault"],[39,48,141,2],[39,49,141,2,"_babelRuntimeHelpersObjectWithoutProperties"],[39,92,141,2],[40,2,2,0],[40,6,2,0,"_thenableJs"],[40,17,2,0],[40,20,2,0,"require"],[40,27,2,0],[40,28,2,0,"_dependencyMap"],[40,42,2,0],[41,2,3,0],[41,6,3,0,"_utilsJs"],[41,14,3,0],[41,17,3,0,"require"],[41,24,3,0],[41,25,3,0,"_dependencyMap"],[41,39,3,0],[42,2,4,0],[42,11,4,9,"defaultTransformerFn"],[42,31,4,29,"defaultTransformerFn"],[42,32,4,30,"data"],[42,36,4,34],[42,38,4,36],[43,4,5,2],[43,11,5,9,"data"],[43,15,5,13],[44,2,6,0],[45,2,7,0],[45,11,7,9,"dehydrateMutation"],[45,28,7,26,"dehydrateMutation"],[45,29,7,27,"mutation"],[45,37,7,35],[45,39,7,37],[46,4,8,2],[46,11,8,9],[47,6,9,4,"mutationKey"],[47,17,9,15],[47,19,9,17,"mutation"],[47,27,9,25],[47,28,9,26,"options"],[47,35,9,33],[47,36,9,34,"mutationKey"],[47,47,9,45],[48,6,10,4,"state"],[48,11,10,9],[48,13,10,11,"mutation"],[48,21,10,19],[48,22,10,20,"state"],[48,27,10,25],[49,6,11,4],[49,10,11,7,"mutation"],[49,18,11,15],[49,19,11,16,"options"],[49,26,11,23],[49,27,11,24,"scope"],[49,32,11,29],[49,36,11,33],[50,8,11,35,"scope"],[50,13,11,40],[50,15,11,42,"mutation"],[50,23,11,50],[50,24,11,51,"options"],[50,31,11,58],[50,32,11,59,"scope"],[51,6,11,65],[51,7,11,66],[52,6,12,4],[52,10,12,7,"mutation"],[52,18,12,15],[52,19,12,16,"meta"],[52,23,12,20],[52,27,12,24],[53,8,12,26,"meta"],[53,12,12,30],[53,14,12,32,"mutation"],[53,22,12,40],[53,23,12,41,"meta"],[54,6,12,46],[54,7,12,47],[55,4,13,2],[55,5,13,3],[56,2,14,0],[57,2,15,0],[57,11,15,9,"dehydrateQuery"],[57,25,15,23,"dehydrateQuery"],[57,26,15,24,"query"],[57,31,15,29],[57,33,15,31,"serializeData"],[57,46,15,44],[57,48,15,46,"shouldRedactErrors"],[57,66,15,64],[57,68,15,66],[58,4,16,2],[58,8,16,8,"promise"],[58,15,16,15],[58,18,16,18,"query"],[58,23,16,23],[58,24,16,24,"promise"],[58,31,16,31],[58,33,16,33,"then"],[58,37,16,37],[58,38,16,38,"serializeData"],[58,51,16,51],[58,52,16,52],[58,53,16,53,"catch"],[58,58,16,58],[58,59,16,60,"error"],[58,64,16,65],[58,68,16,70],[59,6,17,4],[59,10,17,8],[59,11,17,9,"shouldRedactErrors"],[59,29,17,27],[59,30,17,28,"error"],[59,35,17,33],[59,36,17,34],[59,38,17,36],[60,8,18,6],[60,15,18,13,"Promise"],[60,22,18,20],[60,23,18,21,"reject"],[60,29,18,27],[60,30,18,28,"error"],[60,35,18,33],[60,36,18,34],[61,6,19,4],[62,6,20,4],[62,10,20,8,"process"],[62,17,20,15],[62,18,20,16,"env"],[62,21,20,19],[62,22,20,20,"NODE_ENV"],[62,30,20,28],[62,35,20,33],[62,47,20,45],[62,49,20,47],[63,8,21,6,"console"],[63,15,21,13],[63,16,21,14,"error"],[63,21,21,19],[63,22,22,8],[63,85,22,71,"query"],[63,90,22,76],[63,91,22,77,"queryHash"],[63,100,22,86],[63,106,22,92,"error"],[63,111,22,97],[63,162,23,6],[63,163,23,7],[64,6,24,4],[65,6,25,4],[65,13,25,11,"Promise"],[65,20,25,18],[65,21,25,19,"reject"],[65,27,25,25],[65,28,25,26],[65,32,25,30,"Error"],[65,37,25,35],[65,38,25,36],[65,48,25,46],[65,49,25,47],[65,50,25,48],[66,4,26,2],[66,5,26,3],[66,6,26,4],[67,4,27,2,"promise"],[67,11,27,9],[67,13,27,11,"catch"],[67,18,27,16],[67,19,27,17,"noop"],[67,27,27,21],[67,28,27,21,"noop"],[67,32,27,21],[67,33,27,22],[68,4,28,2],[68,11,28,9],[69,6,29,4,"dehydratedAt"],[69,18,29,16],[69,20,29,18,"Date"],[69,24,29,22],[69,25,29,23,"now"],[69,28,29,26],[69,29,29,27],[69,30,29,28],[70,6,30,4,"state"],[70,11,30,9],[70,13,30,11],[71,8,31,6],[71,11,31,9,"query"],[71,16,31,14],[71,17,31,15,"state"],[71,22,31,20],[72,8,32,6],[72,12,32,9,"query"],[72,17,32,14],[72,18,32,15,"state"],[72,23,32,20],[72,24,32,21,"data"],[72,28,32,25],[72,33,32,30],[72,38,32,35],[72,39,32,36],[72,43,32,40],[73,10,33,8,"data"],[73,14,33,12],[73,16,33,14,"serializeData"],[73,29,33,27],[73,30,33,28,"query"],[73,35,33,33],[73,36,33,34,"state"],[73,41,33,39],[73,42,33,40,"data"],[73,46,33,44],[74,8,34,6],[74,9,34,7],[75,6,35,4],[75,7,35,5],[76,6,36,4,"queryKey"],[76,14,36,12],[76,16,36,14,"query"],[76,21,36,19],[76,22,36,20,"queryKey"],[76,30,36,28],[77,6,37,4,"queryHash"],[77,15,37,13],[77,17,37,15,"query"],[77,22,37,20],[77,23,37,21,"queryHash"],[77,32,37,30],[78,6,38,4],[78,10,38,7,"query"],[78,15,38,12],[78,16,38,13,"state"],[78,21,38,18],[78,22,38,19,"status"],[78,28,38,25],[78,33,38,30],[78,42,38,39],[78,46,38,43],[79,8,39,6,"promise"],[80,6,40,4],[80,7,40,5],[81,6,41,4],[81,10,41,7,"query"],[81,15,41,12],[81,16,41,13,"meta"],[81,20,41,17],[81,24,41,21],[82,8,41,23,"meta"],[82,12,41,27],[82,14,41,29,"query"],[82,19,41,34],[82,20,41,35,"meta"],[83,6,41,40],[83,7,41,41],[84,4,42,2],[84,5,42,3],[85,2,43,0],[86,2,44,0],[86,11,44,9,"defaultShouldDehydrateMutation"],[86,41,44,39,"defaultShouldDehydrateMutation"],[86,42,44,40,"mutation"],[86,50,44,48],[86,52,44,50],[87,4,45,2],[87,11,45,9,"mutation"],[87,19,45,17],[87,20,45,18,"state"],[87,25,45,23],[87,26,45,24,"isPaused"],[87,34,45,32],[88,2,46,0],[89,2,47,0],[89,11,47,9,"defaultShouldDehydrateQuery"],[89,38,47,36,"defaultShouldDehydrateQuery"],[89,39,47,37,"query"],[89,44,47,42],[89,46,47,44],[90,4,48,2],[90,11,48,9,"query"],[90,16,48,14],[90,17,48,15,"state"],[90,22,48,20],[90,23,48,21,"status"],[90,29,48,27],[90,34,48,32],[90,43,48,41],[91,2,49,0],[92,2,50,0],[92,11,50,9,"defaultShouldRedactErrors"],[92,36,50,34,"defaultShouldRedactErrors"],[92,37,50,35,"_"],[92,38,50,36],[92,40,50,38],[93,4,51,2],[93,11,51,9],[93,15,51,13],[94,2,52,0],[95,2,53,0],[95,11,53,9,"dehydrate"],[95,20,53,18,"dehydrate"],[95,21,53,19,"client"],[95,27,53,25],[95,29,53,41],[96,4,53,41],[96,8,53,27,"options"],[96,15,53,34],[96,18,53,34,"arguments"],[96,27,53,34],[96,28,53,34,"length"],[96,34,53,34],[96,42,53,34,"arguments"],[96,51,53,34],[96,59,53,34,"undefined"],[96,68,53,34],[96,71,53,34,"arguments"],[96,80,53,34],[96,86,53,37],[96,87,53,38],[96,88,53,39],[97,4,54,2],[97,8,54,8,"filterMutation"],[97,22,54,22],[97,25,54,25,"options"],[97,32,54,32],[97,33,54,33,"shouldDehydrateMutation"],[97,56,54,56],[97,60,54,60,"client"],[97,66,54,66],[97,67,54,67,"getDefaultOptions"],[97,84,54,84],[97,85,54,85],[97,86,54,86],[97,87,54,87,"dehydrate"],[97,96,54,96],[97,98,54,98,"shouldDehydrateMutation"],[97,121,54,121],[97,125,54,125,"defaultShouldDehydrateMutation"],[97,155,54,155],[98,4,55,2],[98,8,55,8,"mutations"],[98,17,55,17],[98,20,55,20,"client"],[98,26,55,26],[98,27,55,27,"getMutationCache"],[98,43,55,43],[98,44,55,44],[98,45,55,45],[98,46,55,46,"getAll"],[98,52,55,52],[98,53,55,53],[98,54,55,54],[98,55,55,55,"flatMap"],[98,62,55,62],[98,63,56,5,"mutation"],[98,71,56,13],[98,75,56,18,"filterMutation"],[98,89,56,32],[98,90,56,33,"mutation"],[98,98,56,41],[98,99,56,42],[98,102,56,45],[98,103,56,46,"dehydrateMutation"],[98,120,56,63],[98,121,56,64,"mutation"],[98,129,56,72],[98,130,56,73],[98,131,56,74],[98,134,56,77],[98,136,57,2],[98,137,57,3],[99,4,58,2],[99,8,58,8,"filterQuery"],[99,19,58,19],[99,22,58,22,"options"],[99,29,58,29],[99,30,58,30,"shouldDehydrateQuery"],[99,50,58,50],[99,54,58,54,"client"],[99,60,58,60],[99,61,58,61,"getDefaultOptions"],[99,78,58,78],[99,79,58,79],[99,80,58,80],[99,81,58,81,"dehydrate"],[99,90,58,90],[99,92,58,92,"shouldDehydrateQuery"],[99,112,58,112],[99,116,58,116,"defaultShouldDehydrateQuery"],[99,143,58,143],[100,4,59,2],[100,8,59,8,"shouldRedactErrors"],[100,26,59,26],[100,29,59,29,"options"],[100,36,59,36],[100,37,59,37,"shouldRedactErrors"],[100,55,59,55],[100,59,59,59,"client"],[100,65,59,65],[100,66,59,66,"getDefaultOptions"],[100,83,59,83],[100,84,59,84],[100,85,59,85],[100,86,59,86,"dehydrate"],[100,95,59,95],[100,97,59,97,"shouldRedactErrors"],[100,115,59,115],[100,119,59,119,"defaultShouldRedactErrors"],[100,144,59,144],[101,4,60,2],[101,8,60,8,"serializeData"],[101,21,60,21],[101,24,60,24,"options"],[101,31,60,31],[101,32,60,32,"serializeData"],[101,45,60,45],[101,49,60,49,"client"],[101,55,60,55],[101,56,60,56,"getDefaultOptions"],[101,73,60,73],[101,74,60,74],[101,75,60,75],[101,76,60,76,"dehydrate"],[101,85,60,85],[101,87,60,87,"serializeData"],[101,100,60,100],[101,104,60,104,"defaultTransformerFn"],[101,124,60,124],[102,4,61,2],[102,8,61,8,"queries"],[102,15,61,15],[102,18,61,18,"client"],[102,24,61,24],[102,25,61,25,"getQueryCache"],[102,38,61,38],[102,39,61,39],[102,40,61,40],[102,41,61,41,"getAll"],[102,47,61,47],[102,48,61,48],[102,49,61,49],[102,50,61,50,"flatMap"],[102,57,61,57],[102,58,62,5,"query"],[102,63,62,10],[102,67,62,15,"filterQuery"],[102,78,62,26],[102,79,62,27,"query"],[102,84,62,32],[102,85,62,33],[102,88,62,36],[102,89,62,37,"dehydrateQuery"],[102,103,62,51],[102,104,62,52,"query"],[102,109,62,57],[102,111,62,59,"serializeData"],[102,124,62,72],[102,126,62,74,"shouldRedactErrors"],[102,144,62,92],[102,145,62,93],[102,146,62,94],[102,149,62,97],[102,151,63,2],[102,152,63,3],[103,4,64,2],[103,11,64,9],[104,6,64,11,"mutations"],[104,15,64,20],[105,6,64,22,"queries"],[106,4,64,30],[106,5,64,31],[107,2,65,0],[108,2,66,0],[108,11,66,9,"hydrate"],[108,18,66,16,"hydrate"],[108,19,66,17,"client"],[108,25,66,23],[108,27,66,25,"dehydratedState"],[108,42,66,40],[108,44,66,42,"options"],[108,51,66,49],[108,53,66,51],[109,4,67,2],[109,8,67,6],[109,15,67,13,"dehydratedState"],[109,30,67,28],[109,35,67,33],[109,43,67,41],[109,47,67,45,"dehydratedState"],[109,62,67,60],[109,67,67,65],[109,71,67,69],[109,73,67,71],[110,6,68,4],[111,4,69,2],[112,4,70,2],[112,8,70,8,"mutationCache"],[112,21,70,21],[112,24,70,24,"client"],[112,30,70,30],[112,31,70,31,"getMutationCache"],[112,47,70,47],[112,48,70,48],[112,49,70,49],[113,4,71,2],[113,8,71,8,"queryCache"],[113,18,71,18],[113,21,71,21,"client"],[113,27,71,27],[113,28,71,28,"getQueryCache"],[113,41,71,41],[113,42,71,42],[113,43,71,43],[114,4,72,2],[114,8,72,8,"deserializeData"],[114,23,72,23],[114,26,72,26,"options"],[114,33,72,33],[114,35,72,35,"defaultOptions"],[114,49,72,49],[114,51,72,51,"deserializeData"],[114,66,72,66],[114,70,72,70,"client"],[114,76,72,76],[114,77,72,77,"getDefaultOptions"],[114,94,72,94],[114,95,72,95],[114,96,72,96],[114,97,72,97,"hydrate"],[114,104,72,104],[114,106,72,106,"deserializeData"],[114,121,72,121],[114,125,72,125,"defaultTransformerFn"],[114,145,72,145],[115,4,73,2],[115,8,73,8,"mutations"],[115,17,73,17],[115,20,73,20,"dehydratedState"],[115,35,73,35],[115,36,73,36,"mutations"],[115,45,73,45],[115,49,73,49],[115,51,73,51],[116,4,74,2],[116,8,74,8,"queries"],[116,15,74,15],[116,18,74,18,"dehydratedState"],[116,33,74,33],[116,34,74,34,"queries"],[116,41,74,41],[116,45,74,45],[116,47,74,47],[117,4,75,2,"mutations"],[117,13,75,11],[117,14,75,12,"forEach"],[117,21,75,19],[117,22,75,20,"_ref"],[117,26,75,20],[117,30,75,55],[118,6,75,55],[118,10,75,23,"state"],[118,15,75,28],[118,18,75,28,"_ref"],[118,22,75,28],[118,23,75,23,"state"],[118,28,75,28],[119,8,75,33,"mutationOptions"],[119,23,75,48],[119,30,75,48,"_objectWithoutProperties"],[119,54,75,48],[119,55,75,48,"default"],[119,62,75,48],[119,64,75,48,"_ref"],[119,68,75,48],[119,70,75,48,"_excluded"],[119,79,75,48],[120,6,76,4,"mutationCache"],[120,19,76,17],[120,20,76,18,"build"],[120,25,76,23],[120,26,77,6,"client"],[120,32,77,12],[120,34,78,6],[121,8,79,8],[121,11,79,11,"client"],[121,17,79,17],[121,18,79,18,"getDefaultOptions"],[121,35,79,35],[121,36,79,36],[121,37,79,37],[121,38,79,38,"hydrate"],[121,45,79,45],[121,47,79,47,"mutations"],[121,56,79,56],[122,8,80,8],[122,11,80,11,"options"],[122,18,80,18],[122,20,80,20,"defaultOptions"],[122,34,80,34],[122,36,80,36,"mutations"],[122,45,80,45],[123,8,81,8],[123,11,81,11,"mutationOptions"],[124,6,82,6],[124,7,82,7],[124,9,83,6,"state"],[124,14,84,4],[124,15,84,5],[125,4,85,2],[125,5,85,3],[125,6,85,4],[126,4,86,2,"queries"],[126,11,86,9],[126,12,86,10,"forEach"],[126,19,86,17],[126,20,87,4,"_ref2"],[126,25,87,4],[126,29,87,69],[127,6,87,69],[127,10,87,7,"queryKey"],[127,18,87,15],[127,21,87,15,"_ref2"],[127,26,87,15],[127,27,87,7,"queryKey"],[127,35,87,15],[128,8,87,17,"state"],[128,13,87,22],[128,16,87,22,"_ref2"],[128,21,87,22],[128,22,87,17,"state"],[128,27,87,22],[129,8,87,24,"queryHash"],[129,17,87,33],[129,20,87,33,"_ref2"],[129,25,87,33],[129,26,87,24,"queryHash"],[129,35,87,33],[130,8,87,35,"meta"],[130,12,87,39],[130,15,87,39,"_ref2"],[130,20,87,39],[130,21,87,35,"meta"],[130,25,87,39],[131,8,87,41,"promise"],[131,15,87,48],[131,18,87,48,"_ref2"],[131,23,87,48],[131,24,87,41,"promise"],[131,31,87,48],[132,8,87,50,"dehydratedAt"],[132,20,87,62],[132,23,87,62,"_ref2"],[132,28,87,62],[132,29,87,50,"dehydratedAt"],[132,41,87,62],[133,6,88,6],[133,10,88,12,"syncData"],[133,18,88,20],[133,21,88,23,"promise"],[133,28,88,30],[133,31,88,33],[133,35,88,33,"tryResolveSync"],[133,46,88,47],[133,47,88,47,"tryResolveSync"],[133,61,88,47],[133,63,88,48,"promise"],[133,70,88,55],[133,71,88,56],[133,74,88,59],[133,79,88,64],[133,80,88,65],[134,6,89,6],[134,10,89,12,"rawData"],[134,17,89,19],[134,20,89,22,"state"],[134,25,89,27],[134,26,89,28,"data"],[134,30,89,32],[134,35,89,37],[134,40,89,42],[134,41,89,43],[134,44,89,46,"syncData"],[134,52,89,54],[134,54,89,56,"data"],[134,58,89,60],[134,61,89,63,"state"],[134,66,89,68],[134,67,89,69,"data"],[134,71,89,73],[135,6,90,6],[135,10,90,12,"data"],[135,14,90,16],[135,17,90,19,"rawData"],[135,24,90,26],[135,29,90,31],[135,34,90,36],[135,35,90,37],[135,38,90,40,"rawData"],[135,45,90,47],[135,48,90,50,"deserializeData"],[135,63,90,65],[135,64,90,66,"rawData"],[135,71,90,73],[135,72,90,74],[136,6,91,6],[136,10,91,10,"query"],[136,15,91,15],[136,18,91,18,"queryCache"],[136,28,91,28],[136,29,91,29,"get"],[136,32,91,32],[136,33,91,33,"queryHash"],[136,42,91,42],[136,43,91,43],[137,6,92,6],[137,10,92,12,"existingQueryIsPending"],[137,32,92,34],[137,35,92,37,"query"],[137,40,92,42],[137,42,92,44,"state"],[137,47,92,49],[137,48,92,50,"status"],[137,54,92,56],[137,59,92,61],[137,68,92,70],[138,6,93,6],[138,10,93,12,"existingQueryIsFetching"],[138,33,93,35],[138,36,93,38,"query"],[138,41,93,43],[138,43,93,45,"state"],[138,48,93,50],[138,49,93,51,"fetchStatus"],[138,60,93,62],[138,65,93,67],[138,75,93,77],[139,6,94,6],[139,10,94,10,"query"],[139,15,94,15],[139,17,94,17],[140,8,95,8],[140,12,95,14,"hasNewerSyncData"],[140,28,95,30],[140,31,95,33,"syncData"],[140,39,95,41],[141,8,95,45],[142,8,96,8],[143,8,97,8,"dehydratedAt"],[143,20,97,20],[143,25,97,25],[143,30,97,30],[143,31,97,31],[143,35,97,35,"dehydratedAt"],[143,47,97,47],[143,50,97,50,"query"],[143,55,97,55],[143,56,97,56,"state"],[143,61,97,61],[143,62,97,62,"dataUpdatedAt"],[143,75,97,75],[144,8,98,8],[144,12,98,12,"state"],[144,17,98,17],[144,18,98,18,"dataUpdatedAt"],[144,31,98,31],[144,34,98,34,"query"],[144,39,98,39],[144,40,98,40,"state"],[144,45,98,45],[144,46,98,46,"dataUpdatedAt"],[144,59,98,59],[144,63,98,63,"hasNewerSyncData"],[144,79,98,79],[144,81,98,81],[145,10,99,10],[145,14,99,31,"_ignored"],[145,22,99,39],[145,25,99,64,"state"],[145,30,99,69],[145,31,99,18,"fetchStatus"],[145,42,99,29],[146,12,99,44,"serializedState"],[146,27,99,59],[146,34,99,59,"_objectWithoutProperties"],[146,58,99,59],[146,59,99,59,"default"],[146,66,99,59],[146,68,99,64,"state"],[146,73,99,69],[146,75,99,69,"_excluded2"],[146,85,99,69],[147,10,100,10,"query"],[147,15,100,15],[147,16,100,16,"setState"],[147,24,100,24],[147,25,100,25],[148,12,101,12],[148,15,101,15,"serializedState"],[148,30,101,30],[149,12,102,12,"data"],[150,10,103,10],[150,11,103,11],[150,12,103,12],[151,8,104,8],[152,6,105,6],[152,7,105,7],[152,13,105,13],[153,8,106,8,"query"],[153,13,106,13],[153,16,106,16,"queryCache"],[153,26,106,26],[153,27,106,27,"build"],[153,32,106,32],[153,33,107,10,"client"],[153,39,107,16],[153,41,108,10],[154,10,109,12],[154,13,109,15,"client"],[154,19,109,21],[154,20,109,22,"getDefaultOptions"],[154,37,109,39],[154,38,109,40],[154,39,109,41],[154,40,109,42,"hydrate"],[154,47,109,49],[154,49,109,51,"queries"],[154,56,109,58],[155,10,110,12],[155,13,110,15,"options"],[155,20,110,22],[155,22,110,24,"defaultOptions"],[155,36,110,38],[155,38,110,40,"queries"],[155,45,110,47],[156,10,111,12,"queryKey"],[156,18,111,20],[157,10,112,12,"queryHash"],[157,19,112,21],[158,10,113,12,"meta"],[159,8,114,10],[159,9,114,11],[160,8,115,10],[161,8,116,10],[162,8,117,10],[163,10,118,12],[163,13,118,15,"state"],[163,18,118,20],[164,10,119,12,"data"],[164,14,119,16],[165,10,120,12,"fetchStatus"],[165,21,120,23],[165,23,120,25],[165,29,120,31],[166,10,121,12,"status"],[166,16,121,18],[166,18,121,20,"data"],[166,22,121,24],[166,27,121,29],[166,32,121,34],[166,33,121,35],[166,36,121,38],[166,45,121,47],[166,48,121,50,"state"],[166,53,121,55],[166,54,121,56,"status"],[167,8,122,10],[167,9,123,8],[167,10,123,9],[168,6,124,6],[169,6,125,6],[169,10,125,10,"promise"],[169,17,125,17],[169,21,125,21],[169,22,125,22,"existingQueryIsPending"],[169,44,125,44],[169,48,125,48],[169,49,125,49,"existingQueryIsFetching"],[169,72,125,72],[170,6,125,76],[171,6,126,6],[172,6,127,7,"dehydratedAt"],[172,18,127,19],[172,23,127,24],[172,28,127,29],[172,29,127,30],[172,33,127,34,"dehydratedAt"],[172,45,127,46],[172,48,127,49,"query"],[172,53,127,54],[172,54,127,55,"state"],[172,59,127,60],[172,60,127,61,"dataUpdatedAt"],[172,73,127,74],[172,74,127,75],[172,76,127,77],[173,8,128,8,"query"],[173,13,128,13],[173,14,128,14,"fetch"],[173,19,128,19],[173,20,128,20],[173,25,128,25],[173,26,128,26],[173,28,128,28],[174,10,129,10],[175,10,130,10,"initialPromise"],[175,24,130,24],[175,26,130,26,"Promise"],[175,33,130,33],[175,34,130,34,"resolve"],[175,41,130,41],[175,42,130,42,"promise"],[175,49,130,49],[175,50,130,50],[175,51,130,51,"then"],[175,55,130,55],[175,56,130,56,"deserializeData"],[175,71,130,71],[176,8,131,8],[176,9,131,9],[176,10,131,10],[176,11,131,11,"catch"],[176,16,131,16],[176,17,131,17,"noop"],[176,25,131,21],[176,26,131,21,"noop"],[176,30,131,21],[176,31,131,22],[177,6,132,6],[178,4,133,4],[178,5,134,2],[178,6,134,3],[179,2,135,0],[180,0,135,1],[180,3]],"functionMap":{"names":["<global>","defaultTransformerFn","dehydrateMutation","dehydrateQuery","query.promise.then._catch$argument_0","defaultShouldDehydrateMutation","defaultShouldDehydrateQuery","defaultShouldRedactErrors","dehydrate","client.getMutationCache.getAll.flatMap$argument_0","client.getQueryCache.getAll.flatMap$argument_0","hydrate","mutations.forEach$argument_0","queries.forEach$argument_0"],"mappings":"AAA;ACG;CDE;AEC;CFO;AGC;2DCC;GDU;CHiB;AKC;CLE;AMC;CNE;AOC;CPE;AQC;ICG,2ED;IEM,+FF;CRG;AWC;oBCS;GDU;IEE;KF8C;CXE"},"hasCjsExports":false},"type":"js/module"}]}