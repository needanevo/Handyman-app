{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"servicesAPI\", {\n    enumerable: true,\n    get: function () {\n      return servicesAPI;\n    }\n  });\n  Object.defineProperty(exports, \"quotesAPI\", {\n    enumerable: true,\n    get: function () {\n      return quotesAPI;\n    }\n  });\n  Object.defineProperty(exports, \"profileAPI\", {\n    enumerable: true,\n    get: function () {\n      return profileAPI;\n    }\n  });\n  Object.defineProperty(exports, \"healthAPI\", {\n    enumerable: true,\n    get: function () {\n      return healthAPI;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _axios = require(_dependencyMap[1], \"axios\");\n  var axios = _interopDefault(_axios);\n  // Get backend URL from environment\n  const BACKEND_URL = _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  class APIClient {\n    authToken = null;\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Request interceptor to add auth token\n      this.client.interceptors.request.use(config => {\n        if (this.authToken) {\n          config.headers.Authorization = `Bearer ${this.authToken}`;\n        }\n        return config;\n      });\n\n      // Response interceptor for error handling\n      this.client.interceptors.response.use(response => response, error => {\n        if (error.response?.status === 401) {\n          // Handle unauthorized - could trigger logout\n          this.clearAuthToken();\n        }\n        return Promise.reject(error);\n      });\n    }\n    setAuthToken(token) {\n      this.authToken = token;\n    }\n    clearAuthToken() {\n      this.authToken = null;\n    }\n\n    // Generic request methods\n    async get(url, params) {\n      const response = await this.client.get(url, {\n        params\n      });\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n  }\n\n  // Create API client instance\n  const apiClient = new APIClient();\n\n  // Authentication API\n  const authAPI = {\n    login: credentials => apiClient.post('/auth/login', credentials),\n    register: userData => apiClient.post('/auth/register', userData),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    setAuthToken: token => apiClient.setAuthToken(token),\n    clearAuthToken: () => apiClient.clearAuthToken()\n  };\n\n  // Services API\n  const servicesAPI = {\n    getServices: category => apiClient.get('/services', category ? {\n      category\n    } : undefined),\n    getService: id => apiClient.get(`/services/${id}`)\n  };\n\n  // Quotes API\n  const quotesAPI = {\n    requestQuote: quoteData => apiClient.post('/quotes/request', quoteData),\n    getQuotes: status => apiClient.get('/quotes', status ? {\n      status_filter: status\n    } : undefined),\n    getQuote: id => apiClient.get(`/quotes/${id}`),\n    respondToQuote: (id, response) => apiClient.post(`/quotes/${id}/respond`, response)\n  };\n\n  // Profile API\n  const profileAPI = {\n    addAddress: address => apiClient.post('/profile/addresses', address),\n    getAddresses: () => apiClient.get('/profile/addresses')\n  };\n\n  // Health check\n  const healthAPI = {\n    check: () => apiClient.get('/health')\n  };\n  var _default = apiClient;\n});","lineCount":150,"map":[[12,2,127,0,"Object"],[12,8,127,0],[12,9,127,0,"defineProperty"],[12,23,127,0],[12,24,127,0,"exports"],[12,31,127,0],[13,4,127,0,"enumerable"],[13,14,127,0],[14,4,127,0,"get"],[14,7,127,0],[14,18,127,0,"get"],[14,19,127,0],[15,6,127,0],[15,13,127,0,"_default"],[15,21,127,0],[16,4,127,0],[17,2,127,0],[18,2,75,0,"Object"],[18,8,75,0],[18,9,75,0,"defineProperty"],[18,23,75,0],[18,24,75,0,"exports"],[18,31,75,0],[19,4,75,0,"enumerable"],[19,14,75,0],[20,4,75,0,"get"],[20,7,75,0],[20,18,75,0,"get"],[20,19,75,0],[21,6,75,0],[21,13,75,0,"authAPI"],[21,20,75,0],[22,4,75,0],[23,2,75,0],[24,2,90,0,"Object"],[24,8,90,0],[24,9,90,0,"defineProperty"],[24,23,90,0],[24,24,90,0,"exports"],[24,31,90,0],[25,4,90,0,"enumerable"],[25,14,90,0],[26,4,90,0,"get"],[26,7,90,0],[26,18,90,0,"get"],[26,19,90,0],[27,6,90,0],[27,13,90,0,"servicesAPI"],[27,24,90,0],[28,4,90,0],[29,2,90,0],[30,2,99,0,"Object"],[30,8,99,0],[30,9,99,0,"defineProperty"],[30,23,99,0],[30,24,99,0,"exports"],[30,31,99,0],[31,4,99,0,"enumerable"],[31,14,99,0],[32,4,99,0,"get"],[32,7,99,0],[32,18,99,0,"get"],[32,19,99,0],[33,6,99,0],[33,13,99,0,"quotesAPI"],[33,22,99,0],[34,4,99,0],[35,2,99,0],[36,2,114,0,"Object"],[36,8,114,0],[36,9,114,0,"defineProperty"],[36,23,114,0],[36,24,114,0,"exports"],[36,31,114,0],[37,4,114,0,"enumerable"],[37,14,114,0],[38,4,114,0,"get"],[38,7,114,0],[38,18,114,0,"get"],[38,19,114,0],[39,6,114,0],[39,13,114,0,"profileAPI"],[39,23,114,0],[40,4,114,0],[41,2,114,0],[42,2,123,0,"Object"],[42,8,123,0],[42,9,123,0,"defineProperty"],[42,23,123,0],[42,24,123,0,"exports"],[42,31,123,0],[43,4,123,0,"enumerable"],[43,14,123,0],[44,4,123,0,"get"],[44,7,123,0],[44,18,123,0,"get"],[44,19,123,0],[45,6,123,0],[45,13,123,0,"healthAPI"],[45,22,123,0],[46,4,123,0],[47,2,123,0],[48,2,125,2],[48,6,125,2,"_expoVirtualEnv"],[48,21,125,2],[48,24,125,2,"require"],[48,31,125,2],[48,32,125,2,"_dependencyMap"],[48,46,125,2],[49,2,1,0],[49,6,1,0,"_axios"],[49,12,1,0],[49,15,1,0,"require"],[49,22,1,0],[49,23,1,0,"_dependencyMap"],[49,37,1,0],[50,2,1,0],[50,6,1,0,"axios"],[50,11,1,0],[50,14,1,0,"_interopDefault"],[50,29,1,0],[50,30,1,0,"_axios"],[50,36,1,0],[51,2,4,0],[52,2,5,0],[52,8,5,6,"BACKEND_URL"],[52,19,5,17],[52,22,5,20,"_expoVirtualEnv"],[52,37,5,20],[52,38,5,20,"env"],[52,41,5,20],[52,42,5,20,"EXPO_PUBLIC_BACKEND_URL"],[52,65,5,20],[52,69,5,59],[52,92,5,82],[53,2,7,0],[53,8,7,6,"APIClient"],[53,17,7,15],[53,18,7,16],[54,4,9,10,"authToken"],[54,13,9,19],[54,16,9,37],[54,20,9,41],[55,4,11,2,"constructor"],[55,15,11,13,"constructor"],[55,16,11,13],[55,18,11,16],[56,6,12,4],[56,10,12,8],[56,11,12,9,"client"],[56,17,12,15],[56,20,12,18,"axios"],[56,25,12,23],[56,26,12,23,"default"],[56,33,12,23],[56,34,12,24,"create"],[56,40,12,30],[56,41,12,31],[57,8,13,6,"baseURL"],[57,15,13,13],[57,17,13,15],[57,20,13,18,"BACKEND_URL"],[57,31,13,29],[57,37,13,35],[58,8,14,6,"timeout"],[58,15,14,13],[58,17,14,15],[58,22,14,20],[59,8,15,6,"headers"],[59,15,15,13],[59,17,15,15],[60,10,16,8],[60,24,16,22],[60,26,16,24],[61,8,17,6],[62,6,18,4],[62,7,18,5],[62,8,18,6],[64,6,20,4],[65,6,21,4],[65,10,21,8],[65,11,21,9,"client"],[65,17,21,15],[65,18,21,16,"interceptors"],[65,30,21,28],[65,31,21,29,"request"],[65,38,21,36],[65,39,21,37,"use"],[65,42,21,40],[65,43,21,42,"config"],[65,49,21,48],[65,53,21,53],[66,8,22,6],[66,12,22,10],[66,16,22,14],[66,17,22,15,"authToken"],[66,26,22,24],[66,28,22,26],[67,10,23,8,"config"],[67,16,23,14],[67,17,23,15,"headers"],[67,24,23,22],[67,25,23,23,"Authorization"],[67,38,23,36],[67,41,23,39],[67,51,23,49],[67,55,23,53],[67,56,23,54,"authToken"],[67,65,23,63],[67,67,23,65],[68,8,24,6],[69,8,25,6],[69,15,25,13,"config"],[69,21,25,19],[70,6,26,4],[70,7,26,5],[70,8,26,6],[72,6,28,4],[73,6,29,4],[73,10,29,8],[73,11,29,9,"client"],[73,17,29,15],[73,18,29,16,"interceptors"],[73,30,29,28],[73,31,29,29,"response"],[73,39,29,37],[73,40,29,38,"use"],[73,43,29,41],[73,44,30,7,"response"],[73,52,30,15],[73,56,30,20,"response"],[73,64,30,28],[73,66,31,7,"error"],[73,71,31,12],[73,75,31,17],[74,8,32,8],[74,12,32,12,"error"],[74,17,32,17],[74,18,32,18,"response"],[74,26,32,26],[74,28,32,28,"status"],[74,34,32,34],[74,39,32,39],[74,42,32,42],[74,44,32,44],[75,10,33,10],[76,10,34,10],[76,14,34,14],[76,15,34,15,"clearAuthToken"],[76,29,34,29],[76,30,34,30],[76,31,34,31],[77,8,35,8],[78,8,36,8],[78,15,36,15,"Promise"],[78,22,36,22],[78,23,36,23,"reject"],[78,29,36,29],[78,30,36,30,"error"],[78,35,36,35],[78,36,36,36],[79,6,37,6],[79,7,38,4],[79,8,38,5],[80,4,39,2],[81,4,41,2,"setAuthToken"],[81,16,41,14,"setAuthToken"],[81,17,41,15,"token"],[81,22,41,28],[81,24,41,30],[82,6,42,4],[82,10,42,8],[82,11,42,9,"authToken"],[82,20,42,18],[82,23,42,21,"token"],[82,28,42,26],[83,4,43,2],[84,4,45,2,"clearAuthToken"],[84,18,45,16,"clearAuthToken"],[84,19,45,16],[84,21,45,19],[85,6,46,4],[85,10,46,8],[85,11,46,9,"authToken"],[85,20,46,18],[85,23,46,21],[85,27,46,25],[86,4,47,2],[88,4,49,2],[89,4,50,2],[89,10,50,8,"get"],[89,13,50,11,"get"],[89,14,50,15,"url"],[89,17,50,26],[89,19,50,28,"params"],[89,25,50,40],[89,27,50,54],[90,6,51,4],[90,12,51,10,"response"],[90,20,51,36],[90,23,51,39],[90,29,51,45],[90,33,51,49],[90,34,51,50,"client"],[90,40,51,56],[90,41,51,57,"get"],[90,44,51,60],[90,45,51,61,"url"],[90,48,51,64],[90,50,51,66],[91,8,51,68,"params"],[92,6,51,75],[92,7,51,76],[92,8,51,77],[93,6,52,4],[93,13,52,11,"response"],[93,21,52,19],[93,22,52,20,"data"],[93,26,52,24],[94,4,53,2],[95,4,55,2],[95,10,55,8,"post"],[95,14,55,12,"post"],[95,15,55,16,"url"],[95,18,55,27],[95,20,55,29,"data"],[95,24,55,39],[95,26,55,53],[96,6,56,4],[96,12,56,10,"response"],[96,20,56,36],[96,23,56,39],[96,29,56,45],[96,33,56,49],[96,34,56,50,"client"],[96,40,56,56],[96,41,56,57,"post"],[96,45,56,61],[96,46,56,62,"url"],[96,49,56,65],[96,51,56,67,"data"],[96,55,56,71],[96,56,56,72],[97,6,57,4],[97,13,57,11,"response"],[97,21,57,19],[97,22,57,20,"data"],[97,26,57,24],[98,4,58,2],[99,4,60,2],[99,10,60,8,"put"],[99,13,60,11,"put"],[99,14,60,15,"url"],[99,17,60,26],[99,19,60,28,"data"],[99,23,60,38],[99,25,60,52],[100,6,61,4],[100,12,61,10,"response"],[100,20,61,36],[100,23,61,39],[100,29,61,45],[100,33,61,49],[100,34,61,50,"client"],[100,40,61,56],[100,41,61,57,"put"],[100,44,61,60],[100,45,61,61,"url"],[100,48,61,64],[100,50,61,66,"data"],[100,54,61,70],[100,55,61,71],[101,6,62,4],[101,13,62,11,"response"],[101,21,62,19],[101,22,62,20,"data"],[101,26,62,24],[102,4,63,2],[103,4,65,2],[103,10,65,8,"delete"],[103,16,65,14,"delete"],[103,17,65,18,"url"],[103,20,65,29],[103,22,65,43],[104,6,66,4],[104,12,66,10,"response"],[104,20,66,36],[104,23,66,39],[104,29,66,45],[104,33,66,49],[104,34,66,50,"client"],[104,40,66,56],[104,41,66,57,"delete"],[104,47,66,63],[104,48,66,64,"url"],[104,51,66,67],[104,52,66,68],[105,6,67,4],[105,13,67,11,"response"],[105,21,67,19],[105,22,67,20,"data"],[105,26,67,24],[106,4,68,2],[107,2,69,0],[109,2,71,0],[110,2,72,0],[110,8,72,6,"apiClient"],[110,17,72,15],[110,20,72,18],[110,24,72,22,"APIClient"],[110,33,72,31],[110,34,72,32],[110,35,72,33],[112,2,74,0],[113,2,75,7],[113,8,75,13,"authAPI"],[113,15,75,20],[113,18,75,23],[114,4,76,2,"login"],[114,9,76,7],[114,11,76,10,"credentials"],[114,22,76,58],[114,26,77,4,"apiClient"],[114,35,77,13],[114,36,77,14,"post"],[114,40,77,18],[114,41,77,88],[114,54,77,101],[114,56,77,103,"credentials"],[114,67,77,114],[114,68,77,115],[115,4,79,2,"register"],[115,12,79,10],[115,14,79,13,"userData"],[115,22,79,26],[115,26,80,4,"apiClient"],[115,35,80,13],[115,36,80,14,"post"],[115,40,80,18],[115,41,80,88],[115,57,80,104],[115,59,80,106,"userData"],[115,67,80,114],[115,68,80,115],[116,4,82,2,"getCurrentUser"],[116,18,82,16],[116,20,82,18,"getCurrentUser"],[116,21,82,18],[116,26,82,24,"apiClient"],[116,35,82,33],[116,36,82,34,"get"],[116,39,82,37],[116,40,82,43],[116,50,82,53],[116,51,82,54],[117,4,84,2,"setAuthToken"],[117,16,84,14],[117,18,84,17,"token"],[117,23,84,30],[117,27,84,35,"apiClient"],[117,36,84,44],[117,37,84,45,"setAuthToken"],[117,49,84,57],[117,50,84,58,"token"],[117,55,84,63],[117,56,84,64],[118,4,86,2,"clearAuthToken"],[118,18,86,16],[118,20,86,18,"clearAuthToken"],[118,21,86,18],[118,26,86,24,"apiClient"],[118,35,86,33],[118,36,86,34,"clearAuthToken"],[118,50,86,48],[118,51,86,49],[119,2,87,0],[119,3,87,1],[121,2,89,0],[122,2,90,7],[122,8,90,13,"servicesAPI"],[122,19,90,24],[122,22,90,27],[123,4,91,2,"getServices"],[123,15,91,13],[123,17,91,16,"category"],[123,25,91,33],[123,29,92,4,"apiClient"],[123,38,92,13],[123,39,92,14,"get"],[123,42,92,17],[123,43,92,25],[123,54,92,36],[123,56,92,38,"category"],[123,64,92,46],[123,67,92,49],[124,6,92,51,"category"],[125,4,92,60],[125,5,92,61],[125,8,92,64,"undefined"],[125,17,92,73],[125,18,92,74],[126,4,94,2,"getService"],[126,14,94,12],[126,16,94,15,"id"],[126,18,94,25],[126,22,95,4,"apiClient"],[126,31,95,13],[126,32,95,14,"get"],[126,35,95,17],[126,36,95,23],[126,49,95,36,"id"],[126,51,95,38],[126,53,95,40],[127,2,96,0],[127,3,96,1],[129,2,98,0],[130,2,99,7],[130,8,99,13,"quotesAPI"],[130,17,99,22],[130,20,99,25],[131,4,100,2,"requestQuote"],[131,16,100,14],[131,18,100,17,"quoteData"],[131,27,100,31],[131,31,101,4,"apiClient"],[131,40,101,13],[131,41,101,14,"post"],[131,45,101,18],[131,46,101,24],[131,63,101,41],[131,65,101,43,"quoteData"],[131,74,101,52],[131,75,101,53],[132,4,103,2,"getQuotes"],[132,13,103,11],[132,15,103,14,"status"],[132,21,103,29],[132,25,104,4,"apiClient"],[132,34,104,13],[132,35,104,14,"get"],[132,38,104,17],[132,39,104,25],[132,48,104,34],[132,50,104,36,"status"],[132,56,104,42],[132,59,104,45],[133,6,104,47,"status_filter"],[133,19,104,60],[133,21,104,62,"status"],[134,4,104,69],[134,5,104,70],[134,8,104,73,"undefined"],[134,17,104,82],[134,18,104,83],[135,4,106,2,"getQuote"],[135,12,106,10],[135,14,106,13,"id"],[135,16,106,23],[135,20,107,4,"apiClient"],[135,29,107,13],[135,30,107,14,"get"],[135,33,107,17],[135,34,107,23],[135,45,107,34,"id"],[135,47,107,36],[135,49,107,38],[135,50,107,39],[136,4,109,2,"respondToQuote"],[136,18,109,16],[136,20,109,18,"respondToQuote"],[136,21,109,19,"id"],[136,23,109,29],[136,25,109,31,"response"],[136,33,109,85],[136,38,110,4,"apiClient"],[136,47,110,13],[136,48,110,14,"post"],[136,52,110,18],[136,53,110,24],[136,64,110,35,"id"],[136,66,110,37],[136,76,110,47],[136,78,110,49,"response"],[136,86,110,57],[137,2,111,0],[137,3,111,1],[139,2,113,0],[140,2,114,7],[140,8,114,13,"profileAPI"],[140,18,114,23],[140,21,114,26],[141,4,115,2,"addAddress"],[141,14,115,12],[141,16,115,15,"address"],[141,23,115,27],[141,27,116,4,"apiClient"],[141,36,116,13],[141,37,116,14,"post"],[141,41,116,18],[141,42,116,24],[141,62,116,44],[141,64,116,46,"address"],[141,71,116,53],[141,72,116,54],[142,4,118,2,"getAddresses"],[142,16,118,14],[142,18,118,16,"getAddresses"],[142,19,118,16],[142,24,119,4,"apiClient"],[142,33,119,13],[142,34,119,14,"get"],[142,37,119,17],[142,38,119,25],[142,58,119,45],[143,2,120,0],[143,3,120,1],[145,2,122,0],[146,2,123,7],[146,8,123,13,"healthAPI"],[146,17,123,22],[146,20,123,25],[147,4,124,2,"check"],[147,9,124,7],[147,11,124,9,"check"],[147,12,124,9],[147,17,124,15,"apiClient"],[147,26,124,24],[147,27,124,25,"get"],[147,30,124,28],[147,31,124,68],[147,40,124,77],[148,2,125,0],[148,3,125,1],[149,2,127,0],[149,6,127,0,"_default"],[149,14,127,0],[149,17,127,15,"apiClient"],[149,26,127,24],[150,0,127,25],[150,3]],"functionMap":{"names":["<global>","APIClient","APIClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","APIClient#setAuthToken","APIClient#clearAuthToken","APIClient#get","APIClient#post","APIClient#put","APIClient#_delete","authAPI.login","authAPI.register","authAPI.getCurrentUser","authAPI.setAuthToken","authAPI.clearAuthToken","servicesAPI.getServices","servicesAPI.getService","quotesAPI.requestQuote","quotesAPI.getQuotes","quotesAPI.getQuote","quotesAPI.respondToQuote","profileAPI.addAddress","profileAPI.getAddresses","healthAPI.check"],"mappings":"AAA;ACM;ECI;yCCU;KDK;MEI,sBF;MGC;OHM;GDE;EKE;GLE;EME;GNE;EOG;GPG;EQE;GRG;ESE;GTG;EUE;GVG;CDC;SYO;mHZC;YaE;mHbC;kBcE,oCd;gBeE,gDf;kBgBE,gChB;eiBK;0EjBC;ckBE;yClBC;gBmBK;qDnBC;aoBE;mFpBC;YqBE;uCrBC;kBsBE;0DtBC;cuBK;sDvBC;gBwBE;8CxBC;SyBK,qEzB"},"hasCjsExports":false},"type":"js/module"}]}